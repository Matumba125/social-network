{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/Chat/AddMessageForm/AddMessageForm.module.css","Components/Dialogs/Chat/Messages/Message/Message.module.css","Components/Dialogs/Chat/Messages/Messages.module.css","Components/Dialogs/Chat/Chat.module.css","Components/Dialogs/Chat/AddMessageForm/AddMessageForm.tsx","Components/Dialogs/Chat/Messages/Message/Message.tsx","Components/Dialogs/Chat/Messages/Messages.tsx","Components/Dialogs/Chat/Chat.tsx","Components/Dialogs/Dialogs.tsx"],"names":["module","exports","AddMessageForm","wsChannel","useState","newMessage","setNewMessage","isReady","setIsReady","useEffect","openHandler","addEventListener","removeEventListener","sendMessage","send","className","style","addMessage","messageInput","autoSize","minRows","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","icon","SendOutlined","color","type","sendBtn","onClick","disabled","Message","props","message","src","photo","UserOutlined","avatar","size","svgAppendix","width","height","xmlns","x","y","filterUnits","id","dy","in","result","stdDeviation","values","fill","fillRule","d","filter","messageContent","name","userName","text","Messages","messages","setMessages","onOpenHandler","newMessages","JSON","parse","data","prevMessages","messagesWrapper","map","m","i","userId","Chat","setWsChannel","ws","closeHandler","setTimeout","createChannel","close","WebSocket","chatWrapper","Dialogs","dialogs"],"mappings":"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","file":"static/js/3.36054ab7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2goUN\",\"dialogs_items\":\"Dialogs_dialogs_items__1JDUH\",\"messages\":\"Dialogs_messages__iGu3o\",\"addMessage\":\"Dialogs_addMessage__165qa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessage\":\"AddMessageForm_addMessage__1pBo-\",\"messageInput\":\"AddMessageForm_messageInput__1eIFv\",\"sendBtn\":\"AddMessageForm_sendBtn__3Z0hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3CLID\",\"avatar\":\"Message_avatar__mw1E4\",\"messageContent\":\"Message_messageContent__zSm26\",\"svgAppendix\":\"Message_svgAppendix__2H4ze\",\"name\":\"Message_name__frqHt\",\"text\":\"Message_text__228oE\",\"time\":\"Message_time__23Oc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrapper\":\"Messages_messagesWrapper__3Ef1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatWrapper\":\"Chat_chatWrapper__2X21x\"};","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from 'react';\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport style from './AddMessageForm.module.css'\r\nimport {Button} from \"antd\";\r\nimport {SendOutlined} from '@ant-design/icons';\r\n\r\ntype AddMessageFormPropsType = {\r\n    wsChannel: WebSocket | null\r\n}\r\n\r\nexport const AddMessageForm: React.FC<AddMessageFormPropsType> = ({wsChannel, ...restProps}) => {\r\n\r\n    const [newMessage, setNewMessage] = useState<string>('')\r\n    const [isReady, setIsReady] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        const openHandler = () => {\r\n            setIsReady(true)\r\n        };\r\n        wsChannel && wsChannel.addEventListener('open', openHandler)\r\n        return () => {\r\n            wsChannel?.removeEventListener('open', openHandler)\r\n        }\r\n    }, [wsChannel])\r\n\r\n    const onMessageTextHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setNewMessage(e.target.value)\r\n    }\r\n\r\n    const onEnterPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if(e.key === 'Enter' && !e.shiftKey){\r\n            e.preventDefault()\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n\r\n    const sendMessage = () => {\r\n        if (!newMessage) {\r\n            return\r\n        }\r\n        wsChannel && wsChannel.send(newMessage)\r\n        setNewMessage('')\r\n    }\r\n\r\n    return (\r\n        <div className={style.addMessage}>\r\n\r\n            <TextArea\r\n                className={style.messageInput}\r\n                autoSize={{minRows: 1,}}\r\n                value={newMessage}\r\n                onChange={onMessageTextHandler}\r\n                onKeyPress={onEnterPressHandler}\r\n            />\r\n\r\n            <Button\r\n                icon={<SendOutlined style={{color: 'rgba(0, 0, 0, 0.85)'}}/>}\r\n                type={'text'}\r\n                className={style.sendBtn}\r\n                onClick={sendMessage}\r\n                disabled={!isReady}\r\n            />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport style from \"./Message.module.css\";\r\nimport {Avatar} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport { ChatMessageType } from '../Messages';\r\n\r\n\r\nconst Message: React.FC<ChatMessageType> = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            <Avatar\r\n                src={props.photo && props.photo}\r\n                icon={!props.photo && <UserOutlined/>}\r\n                className={style.avatar}\r\n                size={50}/>\r\n            <div className={style.svgAppendix}>\r\n                <svg width=\"9\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <defs>\r\n                        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"a\">\r\n                            <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"></feOffset>\r\n                            <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\"\r\n                                            result=\"shadowBlurOuter1\"></feGaussianBlur>\r\n                            <feColorMatrix\r\n                                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\r\n                                in=\"shadowBlurOuter1\"></feColorMatrix>\r\n                        </filter>\r\n                    </defs>\r\n                    <g fill=\"none\" fillRule=\"evenodd\">\r\n                        <path\r\n                            d=\"M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z\"\r\n                            fill=\"rgb(24, 37, 51)\" filter=\"url(#a)\"></path>\r\n                        <path\r\n                            d=\"M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z\"\r\n                            fill=\"rgb(24, 37, 51)\" className=\"corner\"></path>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n                <div className={style.messageContent}>\r\n                    <div className={style.name}>{props.userName}</div>\r\n                    <div className={style.text}>{props.message}</div>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, {useEffect, useState} from 'react';\r\n\r\nimport Message from \"./Message/Message\";\r\nimport style from './Messages.module.css'\r\n\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: string\r\n    userName: string\r\n}\r\n\r\ntype MessagesType ={\r\n    wsChannel: WebSocket | null\r\n}\r\n\r\nexport const Messages: React.FC<MessagesType> = ({wsChannel, ...restProps}) => {\r\n\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\r\n    useEffect(() => {\r\n        const onOpenHandler = (e: MessageEvent) => {\r\n            const newMessages = JSON.parse(e.data);\r\n            setMessages((prevMessages) => [...prevMessages, ...newMessages])\r\n        };\r\n        wsChannel?.addEventListener('message', onOpenHandler)\r\n\r\n        return()=>{\r\n            wsChannel?.removeEventListener('message', onOpenHandler)\r\n        }\r\n    }, [wsChannel])\r\n\r\n\r\n    return (\r\n        <div className={style.messagesWrapper}>\r\n            {messages.map((m: ChatMessageType, i) =>\r\n                <Message\r\n                    key={i}\r\n                    userName={m.userName}\r\n                    message={m.message}\r\n                    userId={m.userId}\r\n                    photo={m.photo}/>\r\n            )}\r\n        </div>\r\n    );\r\n};","import React, {useEffect, useState} from 'react';\r\nimport {AddMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\nimport {Messages} from './Messages/Messages';\r\nimport style from './Chat.module.css'\r\n\r\n\r\nexport const Chat: React.FC = props => {\r\n\r\n    const [wsChannel, setWsChannel] = useState<WebSocket | null>(null)\r\n\r\n    useEffect(() => {\r\n\r\n        let ws: WebSocket\r\n\r\n        const closeHandler = () => {\r\n            setTimeout(createChannel, 3000)\r\n        };\r\n\r\n        function createChannel() {\r\n\r\n            ws?.removeEventListener('close', closeHandler)\r\n            ws?.close()\r\n            ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n\r\n            wsChannel?.addEventListener('close', closeHandler)\r\n            setWsChannel(ws)\r\n        }\r\n\r\n        createChannel()\r\n\r\n        return () => {\r\n            ws.removeEventListener('close', closeHandler)\r\n            ws.close()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        wsChannel?.addEventListener('close', () => {\r\n        })\r\n    }, [wsChannel])\r\n\r\n    return (\r\n        <div className={style.chatWrapper}>\r\n            <Messages wsChannel={wsChannel}/>\r\n            <AddMessageForm wsChannel={wsChannel}/>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport {Chat} from \"./Chat/Chat\";\r\n\r\nconst Dialogs: React.FC = (props) => {\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <Chat/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;"],"sourceRoot":""}