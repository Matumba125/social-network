{"version":3,"sources":["Components/Dialogs/Chat/Chat.module.css","Components/Dialogs/Chat/AddMessageForm/AddMessageForm.tsx","Components/Dialogs/Chat/Messages/Message/Message.tsx","Components/Dialogs/Chat/Messages/Message/UserMessage.tsx","Components/Dialogs/Chat/Messages/Messages.tsx","Components/Dialogs/Chat/Chat.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/Chat/Messages/Message/Message.module.css","Components/Dialogs/Dialogs.module.css","Components/Dialogs/Chat/AddMessageForm/AddMessageForm.module.css","Components/Dialogs/Chat/Messages/Messages.module.css"],"names":["module","exports","AddMessageForm","useState","newMessage","setNewMessage","isReady","useSelector","state","chat","dispatch","useDispatch","sendMessageHandler","sendMessage","className","style","addMessage","placeholder","messageInput","autoSize","minRows","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","icon","SendOutlined","color","type","sendBtn","onClick","disabled","Message","React","memo","props","messageWrapperStyle","last","unique","lastMessageWrapper","message","messageStyle","lastMessage","messageContent","to","userId","src","photo","UserOutlined","avatar","size","svgAppendix","width","height","xmlns","x","y","filterUnits","id","dy","in","result","stdDeviation","values","fill","fillRule","d","filter","first","name","userName","text","UserMessage","userLastMessageWrapper","userMessage","userLastMessage","userMessageContent","userAppendix","userText","Messages","finalSortedMessages","setFinalSortedMessages","messages","currentUserId","getCurrentUserId","autoScroll","setAutoScroll","messagesCounter","setMessagesCounter","elem","document","getElementById","useEffect","sortedMessages","slice","i","length","k","reverse","setTimeout","scrollTop","scrollHeight","messagesWrapper","onScroll","element","currentTarget","Math","abs","clientHeight","count","fontSize","badge","map","m","Chat","startChat","stopChat","chatWrapper","Dialogs","dialogs"],"mappings":"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","file":"static/js/4.97515a81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatWrapper\":\"Chat_chatWrapper__2X21x\"};","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport style from './AddMessageForm.module.css'\r\nimport {Button} from \"antd\";\r\nimport {SendOutlined} from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessage} from '../../../../redux/chatReducer';\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\n\r\n\r\nexport const AddMessageForm: React.FC = () => {\r\n\r\n    const [newMessage, setNewMessage] = useState<string>('')\r\n\r\n    const isReady = useSelector<AppStateType, boolean>(state => state.chat.isReady)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onMessageTextHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setNewMessage(e.target.value)\r\n    }\r\n\r\n    const onEnterPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault()\r\n            sendMessageHandler()\r\n        }\r\n    }\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!newMessage) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(newMessage))\r\n        setNewMessage('')\r\n    }\r\n\r\n    return (\r\n        <div className={style.addMessage}>\r\n\r\n            <TextArea\r\n                placeholder={'New message'}\r\n                className={style.messageInput}\r\n                autoSize={{minRows: 1,}}\r\n                value={newMessage}\r\n                onChange={onMessageTextHandler}\r\n                onKeyPress={onEnterPressHandler}\r\n            />\r\n\r\n            <Button\r\n                icon={<SendOutlined style={{color: 'rgba(0, 0, 0, 0.85)'}}/>}\r\n                type={'text'}\r\n                className={style.sendBtn}\r\n                onClick={sendMessageHandler}\r\n                disabled={!isReady}\r\n            />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport style from \"./Message.module.css\";\r\nimport {Avatar} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {ChatMessageType} from '../../../../../api/chat-api';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Linkify from \"react-linkify\";\r\n\r\n\r\nconst Message: React.FC<ChatMessageType> = React.memo((props) => {\r\n\r\n        const messageWrapperStyle = props.last || props.unique ? style.lastMessageWrapper : style.message\r\n        const messageStyle = props.last || props.unique ? style.lastMessage : style.messageContent\r\n\r\n        return (\r\n            <div className={messageWrapperStyle}>\r\n                {(props.last || props.unique) &&\r\n                <NavLink to={'/social-network/profile/' + props.userId}><Avatar\r\n                    src={props.photo && props.photo}\r\n                    icon={!props.photo && <UserOutlined/>}\r\n                    className={style.avatar}\r\n                    size={40}/>\r\n                    <div className={style.svgAppendix}>\r\n                        <svg width=\"9\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <defs>\r\n                                <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\"\r\n                                        id=\"a\">\r\n                                    <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"/>\r\n                                    <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\"\r\n                                                    result=\"shadowBlurOuter1\"/>\r\n                                    <feColorMatrix\r\n                                        values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\r\n                                        in=\"shadowBlurOuter1\"/>\r\n                                </filter>\r\n                            </defs>\r\n                            <g fill=\"none\" fillRule=\"evenodd\">\r\n                                <path\r\n                                    d=\"M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z\"\r\n                                    fill=\"rgba(0, 0, 0, 0.85)\" filter=\"url(#a)\"/>\r\n                                <path\r\n                                    d=\"M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z\"\r\n                                    fill=\"rgba(0, 0, 0, 0.85)\" className=\"corner\"/>\r\n                            </g>\r\n                        </svg>\r\n                    </div>\r\n                </NavLink>\r\n                }\r\n                <div className={messageStyle}>\r\n                    {(props.first || props.unique) &&\r\n                    <NavLink to={'/social-network/profile/' + props.userId}>\r\n                        <div className={style.name}>{props.userName}</div>\r\n                    </NavLink>}\r\n                    <div className={style.text}><Linkify>{props.message}</Linkify></div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n)\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from \"./Message.module.css\";\r\n\r\ntype UserMessageType = {\r\n    message: string\r\n    first?: boolean\r\n    last?: boolean\r\n    unique?: boolean\r\n}\r\n\r\nconst UserMessage: React.FC<UserMessageType> = React.memo((props) => {\r\n\r\n        const messageWrapperStyle = props.last || props.unique ? style.userLastMessageWrapper : style.userMessage\r\n        const messageStyle = props.last || props.unique ? style.userLastMessage : style.userMessageContent\r\n\r\n        return (\r\n            <div className={messageWrapperStyle}>\r\n                {(props.last || props.unique) &&\r\n                <div className={style.userAppendix}>\r\n                    <svg width=\"9\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <defs>\r\n                            <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"a\">\r\n                                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"/>\r\n                                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\"\r\n                                                result=\"shadowBlurOuter1\"/>\r\n                                <feColorMatrix\r\n                                    values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\r\n                                    in=\"shadowBlurOuter1\"/>\r\n                            </filter>\r\n                        </defs>\r\n                        <g fill=\"none\" fillRule=\"evenodd\">\r\n                            <path\r\n                                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\r\n                                fill=\"#1890ff\" filter=\"url(#a)\"/>\r\n                            <path\r\n                                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\r\n                                fill=\"#1890ff\" className=\"corner\"/>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n                }\r\n                <div className={messageStyle}>\r\n                    <div className={style.userText}>{props.message}</div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n)\r\n\r\nexport default UserMessage;","import React, {UIEvent, useEffect, useState} from 'react';\r\nimport {ChatMessageType} from '../../../../api/chat-api';\r\n\r\nimport Message from \"./Message/Message\";\r\nimport style from './Messages.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\nimport {Badge, Button} from \"antd\";\r\nimport {DownCircleOutlined} from '@ant-design/icons/lib/icons';\r\nimport {getCurrentUserId} from \"../../../../redux/Selectors\";\r\nimport UserMessage from \"./Message/UserMessage\";\r\n\r\n\r\nexport const Messages: React.FC = () => {\r\n\r\n    const [finalSortedMessages, setFinalSortedMessages] = useState<ChatMessageType[]>([])\r\n\r\n    const messages = useSelector<AppStateType, ChatMessageType[]>(state => state.chat.messages)\r\n    const currentUserId = useSelector(getCurrentUserId)\r\n\r\n    const [autoScroll, setAutoScroll] = useState<boolean>(true)\r\n    const [messagesCounter, setMessagesCounter] = useState<number>(-2)\r\n\r\n    const elem = document.getElementById('data');\r\n\r\n\r\n    useEffect(() => {\r\n        const sortedMessages = messages.slice()\r\n        if (messages) {\r\n            for (let i = 0; i < sortedMessages.length; i++) {\r\n                if (sortedMessages[i].userId === currentUserId) {\r\n                    sortedMessages[i].userMessage = true\r\n                }\r\n            }\r\n            for (let i = 0; i < sortedMessages.length; i++) {\r\n                if (sortedMessages[i].userId === sortedMessages[i + 1]?.userId && sortedMessages[i].userId !== sortedMessages[i - 1]?.userId) {\r\n                    sortedMessages[i].first = true\r\n                    sortedMessages[i].unique = false\r\n                    let k = i\r\n                    while (sortedMessages[k].userId === sortedMessages[k + 1]?.userId && sortedMessages[k + 1].userId) {\r\n                        k++\r\n                    }\r\n                    sortedMessages[k - 1].last = false\r\n                    sortedMessages[k].last = true\r\n                    i = k\r\n                }\r\n                if (sortedMessages[i].userId !== sortedMessages[i + 1]?.userId && !sortedMessages[i].last) {\r\n                    sortedMessages[i].unique = true\r\n                }\r\n            }\r\n        }\r\n        setFinalSortedMessages(sortedMessages.reverse())\r\n        setMessagesCounter(messagesCounter + 1)\r\n\r\n        setTimeout(() => {\r\n            if (elem && autoScroll) {\r\n                elem.scrollTop = elem.scrollHeight;\r\n                setMessagesCounter(0)\r\n            }\r\n        }, 5)\r\n    }, [messages])\r\n\r\n    const onScrollHandler = (e: UIEvent<HTMLDivElement>) => {\r\n        const element = e.currentTarget\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 150) {\r\n            setAutoScroll(true)\r\n        } else {\r\n            setAutoScroll(false)\r\n        }\r\n    }\r\n\r\n    const onButtonClickHandler = () => {\r\n        if (elem) {\r\n            elem.scrollTop = elem.scrollHeight;\r\n            setMessagesCounter(0)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            id={'data'}\r\n            className={style.messagesWrapper}\r\n            onScroll={onScrollHandler}>\r\n            {!autoScroll && <Button\r\n                type={\"text\"}\r\n                icon={\r\n                    <Badge count={messagesCounter} size={'small'}>\r\n                        <DownCircleOutlined style={{fontSize: '25px'}}/>\r\n                    </Badge>\r\n                }\r\n                className={style.badge}\r\n                size={'large'}\r\n                onClick={onButtonClickHandler}\r\n            />}\r\n\r\n            {finalSortedMessages.map((m: ChatMessageType, i) =>\r\n                m.userMessage ?\r\n                    <UserMessage\r\n                        key={i}\r\n                        message={m.message}\r\n                        last={m.last}\r\n                        first={m.first}\r\n                        unique={m.unique}\r\n                    /> :\r\n                    <Message\r\n                        key={i}\r\n                        userName={m.userName}\r\n                        message={m.message}\r\n                        userId={m.userId}\r\n                        photo={m.photo}\r\n                        first={m.first}\r\n                        last={m.last}\r\n                        unique={m.unique}\r\n                    />\r\n            )}\r\n        </div>\r\n    );\r\n};","import React, {useEffect} from 'react';\r\nimport {AddMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\nimport {Messages} from './Messages/Messages';\r\nimport style from './Chat.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {startChat, stopChat} from \"../../../redux/chatReducer\";\r\n\r\n\r\nexport const Chat: React.FC = props => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(startChat())\r\n\r\n        return (() => {\r\n            dispatch(stopChat())\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={style.chatWrapper}>\r\n            <Messages/>\r\n            <AddMessageForm/>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport {Chat} from \"./Chat/Chat\";\r\n\r\nconst Dialogs: React.FC = (props) => {\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <Chat/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3CLID\",\"lastMessageWrapper\":\"Message_lastMessageWrapper__24vfZ\",\"avatar\":\"Message_avatar__mw1E4\",\"messageContent\":\"Message_messageContent__zSm26\",\"lastMessage\":\"Message_lastMessage__2nboT\",\"svgAppendix\":\"Message_svgAppendix__2H4ze\",\"name\":\"Message_name__frqHt\",\"text\":\"Message_text__228oE\",\"userLastMessageWrapper\":\"Message_userLastMessageWrapper__QydPZ\",\"userMessage\":\"Message_userMessage__1BDzA\",\"userMessageContent\":\"Message_userMessageContent__1yBBK\",\"userLastMessage\":\"Message_userLastMessage__3Wgx_\",\"userAppendix\":\"Message_userAppendix__e3w45\",\"userText\":\"Message_userText__36twZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2goUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessage\":\"AddMessageForm_addMessage__1pBo-\",\"messageInput\":\"AddMessageForm_messageInput__1eIFv\",\"sendBtn\":\"AddMessageForm_sendBtn__3Z0hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrapper\":\"Messages_messagesWrapper__3Ef1v\",\"badge\":\"Messages_badge__3CZMy\"};"],"sourceRoot":""}