{"version":3,"sources":["Components/UsersPage/UsersPage.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/Message/Message.module.css","Components/Navbars/RightNavbar/Contacts/Contacts.module.css","Components/Profile/UserPosts/UserPosts.module.css","Components/Profile/UserPosts/Post/Post.module.css","Components/Header/Header.module.css","Components/Navbars/LeftNavbar/LeftNavbar.module.css","reportWebVitals.ts","assets/img/userAvatar.jpg","api/api.ts","redux/profilleReducer.ts","assets/img/dimych.jpg","assets/img/andrey.jpg","assets/img/sveta.jpg","redux/dialogsReducer.ts","redux/rightNavbarReducer.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/reduxStore.ts","Components/Navbars/LeftNavbar/LeftNavbar.tsx","Components/Music/Music.tsx","Components/News/News.tsx","Components/Settings/Settings.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/common/ReduxForm/ReduxFormMaterialUi.tsx","Components/Dialogs/Dialogs.tsx","HOC/WithAuthRedirect.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Navbars/RightNavbar/Contacts/Contacts.tsx","Components/Navbars/RightNavbar/RightNavbar.tsx","Components/Navbars/RightNavbar/RightNavbarContainer.tsx","Components/UsersPage/UserPage/UserPage.tsx","Components/UsersPage/UsersPage.tsx","assets/img/preloader.gif","Components/common/Preloader/Preloader.tsx","Components/UsersPage/UsersPageContainer.tsx","assets/img/wrapper.png","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/UserPosts/Post/Post.tsx","Components/Profile/UserPosts/UserPosts.tsx","Components/Profile/UserPosts/UserPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","Components/Login/Login.tsx","App.tsx","index.tsx","Components/Navbars/RightNavbar/RightNavbar.module.css","Components/UsersPage/UserPage/UserPage.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css","Components/Login/Login.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","UsersAPI","currentPage","pageSize","get","response","data","FollowAPI","id","delete","post","ProfileAPI","userId","status","put","AuthorizeAPI","formData","ADD_POST","SET_STATUS","SET_USER_PROFILE","initialState","profile","photos","large","myPhoto","small","fullName","aboutMe","postsData","v1","postContent","postLikes","setStatus","newText","type","updateStatus","newStatus","dispatch","console","log","resultCode","profileReducer","state","action","newPost","newPostText","ADD_MESSAGE","dialogsData","userName","avatar","dimych","andrey","sveta","messageData","messageText","newMessageText","addMessage","newMessage","dialogsReducer","InitialState","contactsData","rightNavbarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","CHANGE_FETCHING_STATUS","CHANGE_RESPONSE_STATUS","users","totalCount","isFetching","responseInProgress","followingUsers","changeFetchingStatus","changeResponseStatus","usersReducer","map","m","followed","filter","SET_USER_DATA","email","login","isAuth","authReducer","rootReducer","combineReducers","profilePage","dialogsPage","rightNavbar","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","LeftNavbar","Grid","item","className","style","leftNav","Paper","navBlock","navbarTitle","to","Music","News","Settings","useDispatch","Button","variant","onClick","DialogItem","props","path","dialog","src","alt","Message","message","RenderTextField","input","custom","label","TextField","renderCheckbox","Checkbox","color","AddMessageReduxForm","reduxForm","Field","name","component","placeholder","e","handleSubmit","reset","Dialogs","dialogsElement","u","messageElement","dialogs","dialogs_items","messages","onSubmit","mapStateToProps","withAuthRedirect","Component","connect","restProps","compose","Contacts","contact","RightNavbar","contactsElement","rightnavData","rightNav","rightNavItem","groupsNavbar","pagesNavbar","RightNavbarContainer","UserPage","React","memo","user","changeFollowStatus","onPageChanged","userInfo","ava","elevation","defaultImg","img","IconButton","size","opacity","disabled","some","PersonAddRounded","fontSize","description","descriptionTop","textDecoration","textAlign","descriptionBot","UsersPage","pages","i","push","usersPage","selectedPage","Preloader","preloader","UsersPageContainer","follow","followUnfollow","pageNumber","getUsers","this","setCurrentPage","items","following","unfollow","ProfileStatus","useState","editMode","setEditMode","setNewStatus","height","autoFocus","onBlur","onKeyPress","key","onChange","currentTarget","value","onDoubleClick","ProfileInfo","infoContainer","CardMedia","borderRadius","marginBottom","wrapper","mainInfo","userID","Post","userAvatar","AddPostReduxForm","UserPosts","postsElement","container","direction","alignContent","userNewPosts","UserPostsContainer","Profile","ProfileContainer","match","params","getProfile","getStatus","withRouter","Header","AppBar","position","header","justifyContent","Toolbar","edge","aria-label","Menu","Typography","PeopleRounded","HeaderContainer","authUser","setUserData","LoginReduxForm","checkbox","Login","loginUser","App","render","DialogsContainer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0c53f452.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"UsersPage_usersPage__3wZfu\",\"selectedPage\":\"UsersPage_selectedPage__24X7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1SljY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Kit1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contacts_contact__35Q3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userNewPosts\":\"UserPosts_userNewPosts__3Atrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__yAHA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__gRr98\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftNav\":\"LeftNavbar_leftNav__3JL1_\",\"navBlock\":\"LeftNavbar_navBlock__3J2mG\",\"item\":\"LeftNavbar_item__231RS\"};","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/userAvatar.9ca0a8b7.jpg\";","import axios from \"axios\";\r\nimport {FormDataType} from \"../Components/Login/Login\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'd5ee63b2-b8ea-4e76-b89c-c960812b3f51'\r\n    }\r\n});\r\n\r\nexport const UsersAPI = {\r\n    getUsers: (currentPage: number, pageSize: number) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const FollowAPI = {\r\n    unfollowUser: (id: number) => {\r\n        return instance.delete(`follow/${id}`,).then(response => response.data)\r\n    },\r\n    followUser: (id: number) => {\r\n        return instance.post(`follow/${id}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfileInfo: (userId: string) => {\r\n        return instance.get(`profile/${userId}`).then(response => response.data)\r\n    },\r\n    getStatus: (userId: string) => {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus: (status: string) => {\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        })\r\n    },\r\n}\r\n\r\nexport const AuthorizeAPI = {\r\n    authorizeUser: () => {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n\r\n    loginUser: (formData: FormDataType) => {\r\n        return instance.post('auth/login', formData)\r\n    },\r\n    logoutUser: () => {\r\n        return instance.delete('auth/login')\r\n    }\r\n}","import {v1} from \"uuid\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\nimport {PhotosType} from \"./usersReducer\";\r\nimport myPhoto from \"../assets/img/userAvatar.jpg\"\r\nimport {Dispatch} from \"redux\";\r\nimport {ProfileAPI} from \"../api/api\";\r\n\r\n\r\nexport type PostType = {\r\n    id: string\r\n    postContent: string\r\n    postLikes: number\r\n}\r\n\r\ntype ContactsType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\n\r\n\r\nexport type ProfileDataType = {\r\n    aboutMe: string\r\n    contacts?: ContactsType\r\n    lookingForAJob?: boolean\r\n    lookingForAJobDescription?: string\r\n    userID?: number\r\n    photos: PhotosType\r\n    fullName: string\r\n}\r\n\r\nexport type ProfileInitialStateType = {\r\n    profile: ProfileDataType\r\n    status: string\r\n    postsData: Array<PostType>\r\n}\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\n\r\nlet initialState: ProfileInitialStateType = {\r\n    profile: {\r\n        photos: {\r\n            large: myPhoto,\r\n            small: myPhoto,\r\n        },\r\n        fullName: 'Nikita',\r\n        aboutMe: 'Zdarova',\r\n    },\r\n    status: '',\r\n    postsData: [\r\n        {\r\n            id: v1(),\r\n            postContent: \"Hello World !!!\",\r\n            postLikes: 15,\r\n\r\n        },\r\n        {\r\n            id: v1(),\r\n            postContent: \"It's my first post!!\",\r\n            postLikes: 28\r\n        }\r\n    ],\r\n}\r\n\r\nconst profileReducer = (state: ProfileInitialStateType = initialState,\r\n                        action: ActionTypes): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: v1(),\r\n                postContent: action.newPostText,\r\n                postLikes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [newPost, ...state.postsData],\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.newText\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText: string) => ({\r\n    type: ADD_POST,\r\n    newPostText,\r\n} as const)\r\n\r\n\r\nexport const setUserProfile = (profile: ProfileDataType) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n} as const)\r\n\r\nexport const setStatus = (newText: string) => ({type: SET_STATUS, newText} as const)\r\n\r\nexport const getProfile = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        ProfileAPI.getProfileInfo(userId).then(data => {\r\n            dispatch(setUserProfile(data))\r\n        });\r\n    }\r\n}\r\nexport const getStatus = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        ProfileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatus(response.data))\r\n        });\r\n    }\r\n}\r\nexport const updateStatus = (newStatus: string) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        ProfileAPI.updateStatus(newStatus).then(response => {\r\n            console.log(response)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(newStatus))\r\n            }\r\n        })\r\n    };\r\n}\r\n\r\n\r\nexport default profileReducer","export default __webpack_public_path__ + \"static/media/dimych.4cfb0ddb.jpg\";","export default __webpack_public_path__ + \"static/media/andrey.05d81a41.jpg\";","export default __webpack_public_path__ + \"static/media/sveta.2e2af972.jpg\";","import {v1} from \"uuid\";\r\nimport dimych from \"../assets/img/dimych.jpg\";\r\nimport andrey from \"../assets/img/andrey.jpg\";\r\nimport sveta from \"../assets/img/sveta.jpg\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\n\r\n\r\nexport type DialogsItemPropsType = {\r\n    id: string\r\n    userName: string\r\n    avatar?: string\r\n}\r\n\r\nexport type MessagePropsType = {\r\n    messageText: string\r\n    id: string\r\n}\r\n\r\nexport type DialogsInitialStateType = typeof initialState\r\n\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: '2', userName: \"Dimych\", avatar: dimych},\r\n        {id: v1(), userName: \"Andrey\", avatar: andrey},\r\n        {id: v1(), userName: \"Sveta\", avatar: sveta},\r\n        {id: v1(), userName: \"Sasha\"},\r\n        {id: v1(), userName: \"Viktor\"},\r\n        {id: v1(), userName: \"Valera\"}\r\n    ] as Array<DialogsItemPropsType>,\r\n\r\n    messageData: [\r\n        {id: v1(), messageText: \"HI\"},\r\n        {id: v1(), messageText: \"Hello\"},\r\n        {id: v1(), messageText: \"YO\"}\r\n    ] as Array<MessagePropsType>,\r\n\r\n    newMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state: DialogsInitialStateType = initialState,\r\n                        action: ActionTypes): DialogsInitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessagePropsType = {\r\n                id: v1(),\r\n                messageText: action.newMessage\r\n            };\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, newMessage],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addMessage = (newMessage: string) => ({\r\n    type: ADD_MESSAGE,\r\n    newMessage\r\n} as const)\r\n\r\n\r\nexport default dialogsReducer","import {v1} from \"uuid\";\r\nimport dimych from \"../assets/img/dimych.jpg\";\r\nimport andrey from \"../assets/img/andrey.jpg\";\r\nimport sveta from \"../assets/img/sveta.jpg\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\n\r\ntype ContactsDataType = {\r\n    id: string\r\n    userName: string\r\n    avatar: string\r\n}\r\n\r\nexport type RightNavInitialStateType = typeof InitialState\r\n\r\nconst InitialState = {\r\n    contactsData: [\r\n        {id: v1(), userName: \"Dimych\", avatar: dimych},\r\n        {id: v1(), userName: \"Andrey\", avatar: andrey},\r\n        {id: v1(), userName: \"Sveta\", avatar: sveta}\r\n    ] as Array<ContactsDataType>\r\n}\r\n\r\nexport const rightNavbarReducer = (state: RightNavInitialStateType = InitialState, action: ActionTypes): RightNavInitialStateType => {\r\n\r\n    return state\r\n}\r\n\r\nexport default rightNavbarReducer","import {ActionTypes} from \"./reduxStore\";\r\nimport {FollowAPI, UsersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n/*type AddressType ={\r\n    country: string\r\n    city: string\r\n}*/\r\n\r\nexport type PhotosType = {\r\n    large: string\r\n    small: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n    followed: boolean\r\n    status: string\r\n    photos: PhotosType\r\n    /*address: AddressType*/\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    responseInProgress: boolean\r\n    followingUsers: Array<number>\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst CHANGE_FETCHING_STATUS = 'CHANGE-FETCHING-STATUS';\r\nconst CHANGE_RESPONSE_STATUS = 'CHANGE-RESPONSE-STATUS';\r\n\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    responseInProgress: true,\r\n    followingUsers: [],\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState,\r\n                      action: ActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m =>\r\n                    m.id === action.id ? {...m, followed: true} : m),\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m =>\r\n                    m.id === action.id ? {...m, followed: false} : m)\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n        case  SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalCount: action.totalCount}\r\n        }\r\n        case CHANGE_FETCHING_STATUS: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case CHANGE_RESPONSE_STATUS: {\r\n            return {\r\n                ...state,\r\n                followingUsers: action.responseInProgress\r\n                    ? [...state.followingUsers, action.id]\r\n                    : state.followingUsers.filter(id => id !== action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (id: number) => ({\r\n    type: FOLLOW,\r\n    id\r\n} as const)\r\nexport const unfollow = (id: number) => ({\r\n    type: UNFOLLOW,\r\n    id\r\n} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({\r\n    type: SET_USERS,\r\n    users\r\n} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n} as const)\r\nexport const setTotalUsersCount = (totalCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n} as const)\r\nexport const changeFetchingStatus = (isFetching: boolean) => ({\r\n    type: CHANGE_FETCHING_STATUS,\r\n    isFetching\r\n} as const)\r\nexport const changeResponseStatus = (responseInProgress: boolean, id: number) => ({\r\n    type: CHANGE_RESPONSE_STATUS,\r\n    responseInProgress,\r\n    id,\r\n} as const)\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(changeFetchingStatus(true))\r\n        UsersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.items.totalCount))\r\n                dispatch(changeFetchingStatus(false))\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport const followUnfollow = (id: number, following: boolean) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        dispatch(changeResponseStatus(true, id))\r\n        if (following) {\r\n            FollowAPI.unfollowUser(id)\r\n                .then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        dispatch(unfollow(id))\r\n                        dispatch(changeResponseStatus(false, id))\r\n                    }\r\n                })\r\n        } else {\r\n            FollowAPI.followUser(id)\r\n                .then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        dispatch(follow(id))\r\n                        dispatch(changeResponseStatus(false, id))\r\n                    }\r\n                })\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default usersReducer","import {ActionTypes} from \"./reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AuthorizeAPI} from \"../api/api\";\r\nimport {FormDataType} from \"../Components/Login/Login\";\r\n\r\n\r\nexport type DataType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n}\r\n\r\nexport type AuthInitialStateType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\nlet initialState: AuthInitialStateType = {\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n    },\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: AuthInitialStateType = initialState,\r\n                     action: ActionTypes): AuthInitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                isAuth: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (data: DataType) => ({\r\n    type: SET_USER_DATA,\r\n    data\r\n} as const)\r\n\r\n\r\nexport const authUser = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        AuthorizeAPI.authorizeUser().then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserData(data.data))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const loginUser = (formData: FormDataType) => {\r\n    return (dispatch: Dispatch) => {\r\n        AuthorizeAPI.loginUser(formData).then(response => {\r\n            console.log(response)\r\n            if (response.data.resultCode === 0) {\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const logoutUser = () => {\r\n    return (dispatch: Dispatch) => {\r\n        AuthorizeAPI.logoutUser().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer, {addPost, setStatus, setUserProfile} from \"./profilleReducer\";\r\nimport dialogsReducer, {addMessage} from \"./dialogsReducer\";\r\nimport rightNavbarReducer from \"./rightNavbarReducer\";\r\nimport usersReducer, {\r\n    changeFetchingStatus,\r\n    changeResponseStatus,\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow\r\n} from \"./usersReducer\";\r\nimport authReducer, {setUserData} from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\n\r\nexport type ActionTypes =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof addMessage> |\r\n    ReturnType<typeof follow> |\r\n    ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof changeFetchingStatus> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setUserData> |\r\n    ReturnType<typeof changeResponseStatus> |\r\n    ReturnType<typeof setStatus>\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    rightNavbar: rightNavbarReducer,\r\n    users: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './LeftNavbar.module.css';\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\n\r\nfunction LeftNavbar() {\r\n    return (\r\n        <Grid item className={style.leftNav}>\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>New Feeds</h2>\r\n            </Paper>\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>More Pages</h2>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/profile/\">Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/dialogs/\">Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/news/\">News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/music/\">Music</NavLink>\r\n                </div>\r\n            </Paper>\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>Account</h2>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/settings/\">Settings</NavLink>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default LeftNavbar;","import React from \"react\";\r\n\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logoutUser} from \"../../redux/authReducer\";\r\n\r\nfunction Settings() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(logoutUser())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            Settings\r\n\r\n            <Button variant={'outlined'} onClick={onClickHandler}>LOGOUT</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport style from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsItemPropsType} from \"../../../redux/dialogsReducer\";\r\n\r\n\r\nconst DialogItem: React.FC<DialogsItemPropsType> = (props) => {\r\n    let path = \"/social-network/profile/\" + props.id;\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            {props.avatar ? <img src={props.avatar} alt={'userImage'}/> : ''}\r\n            <NavLink to={path}>{props.userName}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport style from \"./Message.module.css\";\r\nimport {MessagePropsType} from \"../../../redux/dialogsReducer\";\r\n\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.messageText}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import {Checkbox, TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport const RenderTextField = ({\r\n                                    input,\r\n                                    label,\r\n                                    ...custom\r\n                                }: any) => (<TextField {...input}{...custom}/>)\r\n\r\nexport const renderCheckbox = ({input}: any) => (\r\n    <Checkbox\r\n        color={'primary'}\r\n    />\r\n)","import React, {MouseEvent} from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {RenderTextField} from \"../common/ReduxForm/ReduxFormMaterialUi\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addMessage} from \"../../redux/dialogsReducer\";\r\n\r\ntype AddMessageType = {\r\n    message: string\r\n}\r\n\r\nconst AddMessage: React.FC<InjectedFormProps<AddMessageType>> = (props) => {\r\n\r\n\r\n    const onClickHandler = (e: MouseEvent<HTMLButtonElement>) => {\r\n        props.handleSubmit(e)\r\n        props.reset()\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <Field name={'message'} component={RenderTextField} placeholder={'Type your message'}/>\r\n            <Button onClick={onClickHandler}>Send</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm<AddMessageType>({form: 'message'})(AddMessage)\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let dialogsElement = state.dialogsData.map(u => <DialogItem key={u.id} userName={u.userName} id={u.id}\r\n                                                                avatar={u.avatar}/>)\r\n\r\n    let messageElement = state.messageData.map(m => <Message key={m.id} messageText={m.messageText} id={m.id}/>)\r\n\r\n    const onSubmit = (formData: AddMessageType) => {\r\n        dispatch(addMessage(formData.message))\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogs_items}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messageElement}\r\n                <div className={style.addMessage}>\r\n                    <AddMessageReduxForm onSubmit={onSubmit}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/social-network/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n\r\n}","import {addMessage, DialogsInitialStateType} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: () => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect)(Dialogs)\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport style from \"./Contacts.module.css\";\r\nimport {ContactsDataPropsType} from \"../../../../redux/PropsType\";\r\n\r\nfunction Contacts(props: ContactsDataPropsType) {\r\n\r\n    return (\r\n        <div className={style.contact}>\r\n            {props.avatar ? <img src={props.avatar} alt={'contactImage'}/> : ''}\r\n            <div>{props.userName}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport style from './RightNavbar.module.css';\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {RightNavProps} from \"./RightNavbarContainer\";\r\n\r\nfunction RightNavbar(props: RightNavProps) {\r\n\r\n    const state = props.rightnavData\r\n\r\n    let contactsElement = state.contactsData.map(u => <Contacts key={u.id} userName={u.userName} id={u.id}\r\n                                                                avatar={u.avatar}/>)\r\n\r\n    return (\r\n        <Grid item className={style.rightNav}>\r\n            <Paper color={'inherit'} className={style.rightNavItem}>\r\n                <div className={style.rightNavItem}>\r\n                    <h2 className={style.navbarTitle}>Contacts</h2>\r\n                    {contactsElement}\r\n                </div>\r\n                <div className={style.groupsNavbar}>\r\n                    <h2 className={style.navbarTitle}>Groups</h2>\r\n                </div>\r\n                <div className={style.pagesNavbar}>\r\n                    <h2 className={style.navbarTitle}>Pages</h2>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RightNavbar;","import RightNavbar from \"./RightNavbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionTypes, AppStateType} from \"../../../redux/reduxStore\";\r\nimport {RightNavInitialStateType} from \"../../../redux/rightNavbarReducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    rightnavData: RightNavInitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {}\r\n\r\nexport type RightNavProps = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        rightnavData: state.rightNavbar\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionTypes>) => {\r\n    return {}\r\n}\r\n\r\nconst RightNavbarContainer = connect(mapStateToProps, mapDispatchToProps)(RightNavbar);\r\n\r\nexport default RightNavbarContainer;","import React from 'react';\r\nimport {Grid, IconButton, Paper} from \"@material-ui/core\";\r\nimport style from \"./UserPage.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultImg from \"../../../assets/img/sveta.jpg\";\r\nimport {PersonAddRounded} from \"@material-ui/icons\";\r\nimport {UserType} from \"../../../redux/usersReducer\";\r\n\r\ntype UserPagePropsType = {\r\n    user: UserType\r\n    followingUsers: number[]\r\n    onPageChanged: (pageNumber: number) => void\r\n    changeFollowStatus: (id: number, follow: boolean) => void\r\n}\r\n\r\nexport const UserPage = React.memo(({\r\n                                        user,\r\n                                        followingUsers,\r\n                                        changeFollowStatus,\r\n                                        onPageChanged,\r\n                                        ...restProps\r\n                                    }: UserPagePropsType) => {\r\n        return (\r\n            <Grid item className={style.userInfo} key={user.id}>\r\n                <Paper className={style.ava} elevation={0}>\r\n                    <NavLink to={'/social-network/profile/' + user.id}>\r\n                        <img src={user.photos.small !== null ? user.photos.small : defaultImg}\r\n                             alt={user.id + ' avatar'}\r\n                             className={style.img}/>\r\n                    </NavLink>\r\n                    <IconButton size={'small'} onClick={() => changeFollowStatus(user.id, user.followed)}\r\n                                color={user.followed ? 'secondary' : 'primary'}\r\n                                style={{opacity: user.followed ? '0.3' : '1'}}\r\n                                disabled={followingUsers.some(id => id === user.id)}>\r\n                        <PersonAddRounded fontSize={'small'}/>\r\n                    </IconButton>\r\n                </Paper>\r\n                <Paper className={style.description}>\r\n                    <div className={style.descriptionTop}>\r\n                        <NavLink to={'/social-network/profile/' + user.id}\r\n                                 style={{textDecoration: 'none', color: 'black'}}>{user.name}</NavLink>\r\n                        <div style={{fontSize: \"15px\", textAlign: 'center'}}>\r\n                            <div>\r\n                                Belarus,\r\n                            </div>\r\n                            <div>\r\n                                Minsk\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.descriptionBot} style={{fontSize: \"13px\"}}>\r\n                        \" {user.status} \"\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n)\r\n\r\n","import React from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport style from \"./UsersPage.module.css\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {UserPage} from \"./UserPage/UserPage\";\r\n\r\ntype UsersPagePropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    followingUsers: number[]\r\n    onPageChanged: (pageNumber: number) => void\r\n    changeFollowStatus: (id: number, follow: boolean) => void\r\n}\r\n\r\nconst UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n        // let pagesCount = Math.ceil(props.totalCount / props.pageSize)\r\n\r\n        let pages = [];\r\n        for (let i = 1; i <= 10; i++) {\r\n            pages.push(i)\r\n        }\r\n\r\n        return (\r\n            <div className={style.usersPage}>\r\n                {props.users.map(m => <UserPage user={m}\r\n                                                followingUsers={props.followingUsers}\r\n                                                onPageChanged={props.onPageChanged}\r\n                                                changeFollowStatus={props.changeFollowStatus}/>)}\r\n                <Grid>\r\n                    {pages.map(m =>\r\n                        <span key={m} className={props.currentPage === m ? style.selectedPage : ''}\r\n                              onClick={(e) => {\r\n                                  props.onPageChanged(m)\r\n                              }}>{m} </span>\r\n                    )}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n;\r\n\r\nexport default UsersPage;","export default __webpack_public_path__ + \"static/media/preloader.65c3f468.gif\";","import React from 'react';\r\nimport preloader from \"../../../assets/img/preloader.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt={'preloader'}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {connect} from \"react-redux\";\r\nimport {followUnfollow, getUsers, InitialStateType,} from \"../../redux/usersReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport React from \"react\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    usersPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    followUnfollow: (id: number, following: boolean) => void\r\n\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nclass UsersPageContainer extends React.Component<UsersPropsType> {\r\n\r\n\r\n    changeFollowStatus = (id: number, follow: boolean) => {\r\n        this.props.followUnfollow(id, follow)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.usersPage.currentPage, this.props.usersPage.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.usersPage.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n\r\n            {this.props.usersPage.isFetching ? <Preloader/> : <UsersPage\r\n                users={this.props.usersPage.users}\r\n                totalCount={this.props.usersPage.totalCount}\r\n                currentPage={this.props.usersPage.currentPage}\r\n                pageSize={this.props.usersPage.pageSize}\r\n                followingUsers={this.props.usersPage.followingUsers}\r\n                onPageChanged={this.onPageChanged}\r\n                changeFollowStatus={this.changeFollowStatus}/>\r\n            }\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        usersPage: state.users\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUsers, followUnfollow,}),\r\n    withAuthRedirect,\r\n)(UsersPageContainer)\r\n\r\n\r\n/*import {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport usersReducer, {\r\n    changeFetchingStatus,\r\n    follow,\r\n    InitialStateType,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/usersReducer\";\r\nimport {ActionTypes} from \"../../redux/reduxStore\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Dispatch} from \"redux\";\r\nimport {selectUsersPage} from \"../../redux/selector\";\r\n\r\n//class UsersPageContainer extends React.Component<UsersPropsType>\r\nconst UsersPageContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch<Dispatch<ActionTypes>>()\r\n\r\n    const {\r\n        users,\r\n        totalCount,\r\n        currentPage,\r\n        pageSize,\r\n        isFetching,\r\n    } = useSelector(selectUsersPage)\r\n\r\n    const changeFollowStatus = (id: number, followed: boolean) => {\r\n        if (followed) {\r\n            dispatch(unfollow(id))\r\n        } else {\r\n            dispatch(follow(id))\r\n        }\r\n    }\r\n\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            setUsers(response.data.items)\r\n            setTotalUsersCount(response.data.items.totalCount)\r\n        });\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(changeFetchingStatus(true))\r\n        dispatch(setCurrentPage(pageNumber))\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${pageSize}`)\r\n            .then(response => {\r\n                dispatch(setUsers(response.data.items))\r\n                dispatch(changeFetchingStatus(false))\r\n            });\r\n    }\r\n\r\n    return <>\r\n\r\n        {isFetching ? <Preloader/> : <UsersPage\r\n            users={users}\r\n            totalCount={totalCount}\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n            onPageChanged={onPageChanged}\r\n            changeFollowStatus={changeFollowStatus}/>\r\n        }\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default UsersPageContainer*/","export default __webpack_public_path__ + \"static/media/wrapper.87eb6080.png\";","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateStatus} from \"../../../../redux/profilleReducer\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n}\r\n\r\nexport const ProfileStatus = React.memo(({status, ...restProps}: ProfileStatusPropsType) => {\r\n\r\n        const dispatch = useDispatch()\r\n\r\n        const [editMode, setEditMode] = useState<boolean>(false)\r\n        const [newStatus, setNewStatus] = useState<string>(status)\r\n\r\n        const onDoubleClickHandler = () => {\r\n            setEditMode(true)\r\n            setNewStatus(status)\r\n        }\r\n\r\n        const onBlurHandler = () => {\r\n            setEditMode(false)\r\n            dispatch(updateStatus(newStatus))\r\n        }\r\n\r\n        const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n            if (e.key === \"Enter\") {\r\n                setEditMode(false)\r\n                dispatch(updateStatus(newStatus))\r\n            }\r\n        }\r\n\r\n        const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n            setNewStatus(e.currentTarget.value)\r\n        }\r\n\r\n        return (\r\n            <div style={{height: '32px'}}>\r\n                {!editMode ?\r\n                    <span onDoubleClick={onDoubleClickHandler}>{status ? status : '-----'}</span> :\r\n                    <TextField autoFocus={true}\r\n                               onBlur={onBlurHandler}\r\n                               onKeyPress={onKeyPressHandler}\r\n                               onChange={onChangeHandler}\r\n                               value={newStatus}>\r\n                    </TextField>\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n)","import React from \"react\";\r\nimport wrapper from \"../../../assets/img/wrapper.png\";\r\nimport {CardMedia} from \"@material-ui/core\";\r\nimport {ProfileDataType} from \"../../../redux/profilleReducer\";\r\nimport defaultImg from \"../../../assets/img/sveta.jpg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport style from \"./ProfileInfo.module.css\"\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileDataType\r\n    status: string\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfoPropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n\r\n        return (\r\n            <div className={style.infoContainer}>\r\n                <CardMedia style={{borderRadius: '10px', marginBottom: '10px'}} component=\"img\" src={wrapper}/>\r\n                <div className={style.mainInfo}>\r\n                    <img className={style.ava} alt={`${props.profile.userID} user ava`}\r\n                         src={props.profile.photos.small !== null ? props.profile.photos.small : defaultImg}/>\r\n                    <div className={style.description}>\r\n                        <span className={style.fullName}>{props.profile.fullName}</span>\r\n                        <ProfileStatus status={props.status}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport style from './Post.module.css'\r\nimport userAvatar from '../../../../assets/img/userAvatar.jpg'\r\nimport {PostType} from '../../../../redux/profilleReducer';\r\n\r\nfunction Post(props: PostType) {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src={userAvatar} alt={'userImage'}/>\r\n            {props.postContent}\r\n            <div>\r\n                <span>{props.postLikes} likes</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {MouseEvent} from 'react'\r\nimport style from './UserPosts.module.css'\r\nimport Post from \"./Post/Post\"\r\nimport {UsersPostsPropsType} from \"./UserPostsContainer\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {RenderTextField} from \"../../common/ReduxForm/ReduxFormMaterialUi\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addPost} from \"../../../redux/profilleReducer\";\r\n\r\ntype AddPostType = {\r\n    post: string\r\n}\r\n\r\n\r\nconst AddPost: React.FC<InjectedFormProps<AddPostType>> = (props) => {\r\n\r\n    const onClickHandler = (e: MouseEvent<HTMLButtonElement>) => {\r\n        props.handleSubmit(e)\r\n        props.reset()\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <Field name={'post'} component={RenderTextField} placeholder={'Type your post'}/>\r\n            <Button onClick={onClickHandler}>Send</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm<AddPostType>({form: 'post'})(AddPost)\r\n\r\nfunction UserPosts(props: UsersPostsPropsType) {\r\n\r\n    let state = props.profilePage\r\n\r\n\r\n    let postsElement = state.postsData.map(m =>\r\n        <Post\r\n            key={m.id}\r\n            postContent={m.postContent}\r\n            postLikes={m.postLikes}\r\n            id={m.id}\r\n        />)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: AddPostType) => {\r\n        dispatch(addPost(formData.post))\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid item container direction={'column'} alignContent={'center'}>\r\n            <div className={style.userNewPosts}>\r\n                <AddPostReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n            {postsElement}\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default UserPosts;","import {ProfileInitialStateType} from \"../../../redux/profilleReducer\";\r\nimport UserPosts from \"./UserPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {}\r\n\r\nexport type UsersPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst UserPostsContainer = connect(mapStateToProps, {})(UserPosts);\r\n\r\n\r\nexport default UserPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport UserPostsContainer from \"./UserPosts/UserPostsContainer\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {ProfileStateType} from \"./ProfileContainer\";\r\n\r\nfunction Profile(props: ProfileStateType) {\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\">\r\n                <ProfileInfo profile={props.profilePage.profile} status={props.profilePage.status}/>\r\n                <UserPostsContainer/>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, ProfileInitialStateType} from \"../../redux/profilleReducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n}\r\n\r\ntype UserIdType = {\r\n    userId: string\r\n}\r\n\r\nexport type ProfileStateType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport type PropsType = RouteComponentProps<UserIdType> & ProfileStateType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '18309';\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    profilePage: state.profilePage,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus}),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {AppBar, Button, IconButton, TextField, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {Menu, PeopleRounded} from \"@material-ui/icons\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DataType} from \"../../redux/authReducer\";\r\n\r\ntype HeaderPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nfunction Header(props: HeaderPropsType) {\r\n    return (\r\n        <AppBar color={'inherit'} position={'static'} className={style.header} style={{justifyContent: \"center\"}}>\r\n            <Toolbar style={{justifyContent: \"space-between\"}}>\r\n                <IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\">\r\n                    <Menu/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\">\r\n                    Social Network\r\n                </Typography>\r\n                <TextField\r\n                    size={'small'}\r\n                    variant=\"outlined\"\r\n                    color={'primary'}\r\n                    placeholder=\"Title\"\r\n                />\r\n                <NavLink to=\"/social-network/users-page\">\r\n                    <IconButton>\r\n                        <PeopleRounded color={'primary'}/>\r\n                    </IconButton>\r\n                </NavLink>\r\n                {props.isAuth ? <NavLink to=\"/social-network/profile\">{props.data.login}</NavLink>\r\n                    : <NavLink to=\"/social-network/login\">\r\n                        <Button variant={\"outlined\"} color=\"primary\">Login</Button>\r\n                    </NavLink>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {AuthInitialStateType, authUser} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStateToPropsType = AuthInitialStateType\r\n\r\n\r\ntype MapDispatchToPropsType = {\r\n    authUser: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.authUser()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Header data={this.props.data} isAuth={this.props.isAuth}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {authUser})(HeaderContainer);","import React, {MouseEvent} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport style from './Login.module.css'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginUser} from \"../../redux/authReducer\";\r\nimport {renderCheckbox, RenderTextField} from \"../common/ReduxForm/ReduxFormMaterialUi\";\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n\r\n\r\n    const onClickHandler = (e: MouseEvent<HTMLButtonElement>) => {\r\n        props.handleSubmit(e)\r\n        props.reset()\r\n    }\r\n\r\n    return (\r\n        <form className={style.form}>\r\n            <Field name={'email'} component={RenderTextField} placeholder={'Login'}/>\r\n            <Field name={'password'} component={RenderTextField} placeholder={'Password'}/>\r\n            <div className={style.checkbox}>\r\n                <Field name={'rememberMe'} component={renderCheckbox}/> Remember me\r\n            </div>\r\n            <Button onClick={onClickHandler}>Sign In</Button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        console.log(formData)\r\n        dispatch(loginUser(formData))\r\n    }\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <h2>LOGIN</h2>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport LeftNavbar from \"./Components/Navbars/LeftNavbar/LeftNavbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport News from \"./Components/News/News\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport RightNavbarContainer from \"./Components/Navbars/RightNavbar/RightNavbarContainer\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport UsersPageContainer from \"./Components/UsersPage/UsersPageContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <HeaderContainer/>\r\n            <Grid className={'main-content'}>\r\n                <LeftNavbar/>\r\n                <Paper className=\"wrapper\">\r\n                    <Route path={\"/social-network/dialogs\"} render={() => <DialogsContainer/>}/>\r\n\r\n                    <Route path={\"/social-network/profile/:userId?\"} render={() => <ProfileContainer/>}/>\r\n\r\n                    <Route path={\"/social-network/users-page\"} render={() => <UsersPageContainer/>}/>\r\n\r\n\r\n                    <Route path={\"/social-network/music\"} component={Music}/>\r\n                    <Route path={\"/social-network/news\"} component={News}/>\r\n                    <Route path={\"/social-network/settings\"} component={Settings}/>\r\n                    <Route path={\"/social-network/login\"} component={Login}/>\r\n                </Paper>\r\n                <RightNavbarContainer/>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/reduxStore\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightNav\":\"RightNavbar_rightNav__1Wsmb\",\"navbarTitle\":\"RightNavbar_navbarTitle__2b3Ed\",\"rightNavItem\":\"RightNavbar_rightNavItem__6en6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"UserPage_userInfo__1DlE8\",\"img\":\"UserPage_img__3eEIc\",\"ava\":\"UserPage_ava__XYoxP\",\"description\":\"UserPage_description__2mX2r\",\"descriptionTop\":\"UserPage_descriptionTop__1j8BI\",\"descriptionBot\":\"UserPage_descriptionBot__1J6GA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"ProfileInfo_infoContainer__1BEBN\",\"mainInfo\":\"ProfileInfo_mainInfo__150Qa\",\"description\":\"ProfileInfo_description__np7mD\",\"fullName\":\"ProfileInfo_fullName__1BFQY\",\"ava\":\"ProfileInfo_ava__3pWAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__14t2F\",\"dialogs_items\":\"Dialogs_dialogs_items__2Qi4m\",\"messages\":\"Dialogs_messages__3ydIv\",\"addMessage\":\"Dialogs_addMessage__1GQ4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2MSQL\",\"checkbox\":\"Login_checkbox__1C_6j\"};"],"sourceRoot":""}