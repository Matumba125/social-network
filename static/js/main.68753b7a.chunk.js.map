{"version":3,"sources":["reportWebVitals.ts","assets/img/userAvatar.jpg","api/api.ts","redux/profilleReducer.ts","assets/img/dimych.jpg","assets/img/andrey.jpg","assets/img/sveta.jpg","redux/dialogsReducer.ts","redux/rightNavbarReducer.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/reduxStore.ts","Components/Navbars/LeftNavbar/LeftNavbar.tsx","Components/Music/Music.tsx","Components/News/News.tsx","Components/Settings/Settings.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","HOC/WithAuthRedirect.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Navbars/RightNavbar/Contacts/Contacts.tsx","Components/Navbars/RightNavbar/RightNavbar.tsx","Components/Navbars/RightNavbar/RightNavbarContainer.tsx","Components/UsersPage/UsersPage.tsx","assets/img/preloader.gif","Components/common/Preloader/Preloader.tsx","Components/UsersPage/UsersPageContainer.tsx","assets/img/wrapper.png","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/UserPosts/Post/Post.tsx","Components/Profile/UserPosts/UserPosts.tsx","Components/Profile/UserPosts/UserPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","Components/Login/Login.tsx","App.tsx","index.tsx","Components/Navbars/LeftNavbar/LeftNavbar.module.css","Components/UsersPage/UsersPage.module.css","Components/Navbars/RightNavbar/RightNavbar.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/UserPosts/UserPosts.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/Message/Message.module.css","Components/Navbars/RightNavbar/Contacts/Contacts.module.css","Components/Profile/UserPosts/Post/Post.module.css","Components/Header/Header.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","UsersAPI","currentPage","pageSize","get","response","data","FollowAPI","id","delete","post","ProfileAPI","userId","AuthorizeAPI","ADD_POST","CHANGE_POST_TEXT","SET_USER_PROFILE","initialState","profile","photos","large","myPhoto","small","fullName","messageForNewPost","postsData","v1","postContent","postLikes","profileReducer","state","action","type","newPost","newText","ADD_MESSAGE","CHANGE_MESSAGE_TEXT","dialogsData","userName","avatar","dimych","andrey","sveta","messageData","messageText","newMessageText","dialogsReducer","newMessage","InitialState","contactsData","rightNavbarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","CHANGE_FETCHING_STATUS","CHANGE_RESPONSE_STATUS","users","totalCount","isFetching","responseInProgress","followingUsers","changeFetchingStatus","changeResponseStatus","usersReducer","map","m","followed","filter","SET_USER_DATA","email","login","isAuth","authReducer","rootReducer","combineReducers","profilePage","dialogsPage","rightNavbar","auth","store","createStore","applyMiddleware","thunkMiddleware","LeftNavbar","Grid","container","item","className","style","leftNav","xs","zeroMinWidth","direction","Paper","navBlock","navbarTitle","to","Music","News","Settings","DialogItem","props","path","dialog","src","alt","Message","message","Dialogs","dialogsElement","u","messageElement","dialogs","dialogs_items","messages","addMessage","onChange","e","changeMessageText","currentTarget","value","onClick","mapStateToProps","withAuthRedirect","Component","connect","restProps","AuthRedirectComponent","DialogsContainer","Contacts","contact","RightNavbar","contactsElement","rightnavData","color","rightNav","rightNavItem","groupsNavbar","pagesNavbar","RightNavbarContainer","dispatch","UsersPage","pages","i","push","usersPage","userInfo","ava","elevation","defaultImg","img","IconButton","size","changeFollowStatus","opacity","disabled","some","PersonAddRounded","fontSize","description","descriptionTop","textDecoration","name","textAlign","descriptionBot","status","selectedPage","onPageChanged","Preloader","preloader","follow","followUnfollow","pageNumber","getUsers","this","React","setCurrentPage","items","following","resultCode","unfollow","ProfileInfo","infoContainer","CardMedia","borderRadius","marginBottom","component","wrapper","mainInfo","height","width","aboutMe","Post","userAvatar","UserPosts","postsElement","alignContent","userNewPosts","textarea","changePostText","button","addPost","UserPostsContainer","text","Profile","match","params","getProfile","WithUrlDataContainerComponent","withRouter","Header","AppBar","position","header","justifyContent","Toolbar","edge","aria-label","Menu","Typography","variant","TextField","placeholder","PeopleRounded","Button","HeaderContainer","authUser","setUserData","Login","App","Container","fixed","spacing","render","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.68753b7a.chunk.js","sourcesContent":["import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/userAvatar.9ca0a8b7.jpg\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'd5ee63b2-b8ea-4e76-b89c-c960812b3f51'\r\n    }\r\n});\r\n\r\nexport const UsersAPI = {\r\n    getUsers: (currentPage: number, pageSize: number) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const FollowAPI = {\r\n    unfollowUser: (id: number) => {\r\n        return instance.delete(`follow/${id}`,).then(response => response.data)\r\n    },\r\n    followUser: (id: number) => {\r\n        return instance.post(`follow/${id}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfileInfo: (userId: string) => {\r\n        return instance.get(`profile/${userId}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const AuthorizeAPI = {\r\n    authorizeUser: () => {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n}","import {v1} from \"uuid\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\nimport {PhotosType} from \"./usersReducer\";\r\nimport myPhoto from \"../assets/img/userAvatar.jpg\"\r\nimport {Dispatch} from \"redux\";\r\nimport {ProfileAPI} from \"../api/api\";\r\n\r\n\r\nexport type PostType = {\r\n    id: string\r\n    postContent: string\r\n    postLikes: number\r\n}\r\n\r\ntype ContactsType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\n\r\n\r\nexport type ProfileDataType = {\r\n    aboutMe?: string\r\n    contacts?: ContactsType\r\n    lookingForAJob?: boolean\r\n    lookingForAJobDescription?: string\r\n    userID?: number\r\n    photos: PhotosType\r\n    fullName: string\r\n}\r\n\r\nexport type ProfileInitialStateType = {\r\n    profile: ProfileDataType\r\n    messageForNewPost: string\r\n    postsData: Array<PostType>\r\n}\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst CHANGE_POST_TEXT = 'CHANGE-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\n\r\nlet initialState: ProfileInitialStateType = {\r\n    profile: {\r\n        photos: {\r\n            large: myPhoto,\r\n            small: myPhoto,\r\n        },\r\n        fullName: 'Nikita'\r\n    },\r\n    messageForNewPost: '',\r\n    postsData: [\r\n        {\r\n            id: v1(),\r\n            postContent: \"Hello World !!!\",\r\n            postLikes: 15,\r\n\r\n        },\r\n        {\r\n            id: v1(),\r\n            postContent: \"It's my first post!!\",\r\n            postLikes: 28\r\n        }\r\n    ],\r\n}\r\n\r\nconst profileReducer = (state: ProfileInitialStateType = initialState,\r\n                        action: ActionTypes): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: v1(),\r\n                postContent: state.messageForNewPost,\r\n                postLikes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [newPost, ...state.postsData],\r\n                messageForNewPost: ''\r\n            }\r\n\r\n        case CHANGE_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                messageForNewPost: action.newText\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST} as const)\r\n\r\nexport const changePostTextActionCreator = (newText: string) => ({\r\n        type: CHANGE_POST_TEXT,\r\n        newText: newText\r\n    } as const\r\n)\r\n\r\nexport const setUserProfile = (profile: ProfileDataType) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n} as const)\r\n\r\nexport const getProfile = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        ProfileAPI.getProfileInfo(userId).then(data => {\r\n            dispatch(setUserProfile(data))\r\n        });\r\n    }\r\n}\r\n\r\nexport default profileReducer","export default __webpack_public_path__ + \"static/media/dimych.4cfb0ddb.jpg\";","export default __webpack_public_path__ + \"static/media/andrey.05d81a41.jpg\";","export default __webpack_public_path__ + \"static/media/sveta.2e2af972.jpg\";","import {v1} from \"uuid\";\r\nimport dimych from \"../assets/img/dimych.jpg\";\r\nimport andrey from \"../assets/img/andrey.jpg\";\r\nimport sveta from \"../assets/img/sveta.jpg\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\n\r\n\r\nexport type DialogsItemPropsType = {\r\n    id: string\r\n    userName: string\r\n    avatar?: string\r\n}\r\n\r\nexport type MessagePropsType = {\r\n    messageText: string\r\n    id: string\r\n}\r\n\r\nexport type DialogsInitialStateType = typeof initialState\r\n\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst CHANGE_MESSAGE_TEXT = 'CHANGE-MESSAGE-TEXT';\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: v1(), userName: \"Dimych\", avatar: dimych},\r\n        {id: v1(), userName: \"Andrey\", avatar: andrey},\r\n        {id: v1(), userName: \"Sveta\", avatar: sveta},\r\n        {id: v1(), userName: \"Sasha\"},\r\n        {id: v1(), userName: \"Viktor\"},\r\n        {id: v1(), userName: \"Valera\"}\r\n    ] as Array<DialogsItemPropsType>,\r\n\r\n    messageData: [\r\n        {id: v1(), messageText: \"HI\"},\r\n        {id: v1(), messageText: \"Hello\"},\r\n        {id: v1(), messageText: \"YO\"}\r\n    ] as Array<MessagePropsType>,\r\n\r\n    newMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state: DialogsInitialStateType = initialState,\r\n                        action: ActionTypes): DialogsInitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessagePropsType = {\r\n                id: v1(),\r\n                messageText: state.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, newMessage],\r\n                newMessageText: ''\r\n            }\r\n\r\n        case CHANGE_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addMessage = () => ({type: ADD_MESSAGE} as const)\r\n\r\nexport const changeMessageText = (newText: string) => ({\r\n        type: CHANGE_MESSAGE_TEXT,\r\n        newText: newText\r\n    } as const\r\n)\r\n\r\nexport default dialogsReducer","import {v1} from \"uuid\";\r\nimport dimych from \"../assets/img/dimych.jpg\";\r\nimport andrey from \"../assets/img/andrey.jpg\";\r\nimport sveta from \"../assets/img/sveta.jpg\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\n\r\ntype ContactsDataType = {\r\n    id: string\r\n    userName: string\r\n    avatar: string\r\n}\r\n\r\nexport type RightNavInitialStateType = typeof InitialState\r\n\r\nconst InitialState = {\r\n    contactsData: [\r\n        {id: v1(), userName: \"Dimych\", avatar: dimych},\r\n        {id: v1(), userName: \"Andrey\", avatar: andrey},\r\n        {id: v1(), userName: \"Sveta\", avatar: sveta}\r\n    ] as Array<ContactsDataType>\r\n}\r\n\r\nexport const rightNavbarReducer = (state: RightNavInitialStateType = InitialState, action: ActionTypes): RightNavInitialStateType => {\r\n\r\n    return state\r\n}\r\n\r\nexport default rightNavbarReducer","import {ActionTypes} from \"./reduxStore\";\r\nimport {FollowAPI, UsersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n/*type AddressType ={\r\n    country: string\r\n    city: string\r\n}*/\r\n\r\nexport type PhotosType = {\r\n    large: string\r\n    small: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n    followed: boolean\r\n    status: string\r\n    photos: PhotosType\r\n    /*address: AddressType*/\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    responseInProgress: boolean\r\n    followingUsers: Array<number>\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst CHANGE_FETCHING_STATUS = 'CHANGE-FETCHING-STATUS';\r\nconst CHANGE_RESPONSE_STATUS = 'CHANGE-RESPONSE-STATUS';\r\n\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    responseInProgress: true,\r\n    followingUsers: [],\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState,\r\n                      action: ActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m =>\r\n                    m.id === action.id ? {...m, followed: true} : m),\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m =>\r\n                    m.id === action.id ? {...m, followed: false} : m)\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n        case  SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalCount: action.totalCount}\r\n        }\r\n        case CHANGE_FETCHING_STATUS: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case CHANGE_RESPONSE_STATUS: {\r\n            return {\r\n                ...state,\r\n                followingUsers: action.responseInProgress\r\n                    ? [...state.followingUsers, action.id]\r\n                    : state.followingUsers.filter(id => id !== action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (id: number) => ({\r\n    type: FOLLOW,\r\n    id\r\n} as const)\r\nexport const unfollow = (id: number) => ({\r\n    type: UNFOLLOW,\r\n    id\r\n} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({\r\n    type: SET_USERS,\r\n    users\r\n} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n} as const)\r\nexport const setTotalUsersCount = (totalCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n} as const)\r\nexport const changeFetchingStatus = (isFetching: boolean) => ({\r\n    type: CHANGE_FETCHING_STATUS,\r\n    isFetching\r\n} as const)\r\nexport const changeResponseStatus = (responseInProgress: boolean, id: number) => ({\r\n    type: CHANGE_RESPONSE_STATUS,\r\n    responseInProgress,\r\n    id,\r\n} as const)\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(changeFetchingStatus(true))\r\n        UsersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.items.totalCount))\r\n                dispatch(changeFetchingStatus(false))\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport const followUnfollow = (id: number, following: boolean) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        dispatch(changeResponseStatus(true, id))\r\n        if (following) {\r\n            FollowAPI.unfollowUser(id)\r\n                .then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        dispatch(unfollow(id))\r\n                        dispatch(changeResponseStatus(false, id))\r\n                    }\r\n                })\r\n        } else {\r\n            FollowAPI.followUser(id)\r\n                .then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        dispatch(follow(id))\r\n                        dispatch(changeResponseStatus(false, id))\r\n                    }\r\n                })\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default usersReducer","import {ActionTypes} from \"./reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AuthorizeAPI} from \"../api/api\";\r\n\r\n\r\nexport type DataType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n}\r\n\r\nexport type AuthInitialStateType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\nlet initialState: AuthInitialStateType = {\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n    },\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: AuthInitialStateType = initialState,\r\n                     action: ActionTypes): AuthInitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                isAuth: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (data: DataType) => ({\r\n    type: SET_USER_DATA,\r\n    data\r\n} as const)\r\n\r\nexport const authUser = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n\r\n        AuthorizeAPI.authorizeUser().then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserData(data.data))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer, {addPostActionCreator, changePostTextActionCreator, setUserProfile} from \"./profilleReducer\";\r\nimport dialogsReducer, {addMessage, changeMessageText} from \"./dialogsReducer\";\r\nimport rightNavbarReducer from \"./rightNavbarReducer\";\r\nimport usersReducer, {\r\n    changeFetchingStatus,\r\n    changeResponseStatus,\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow\r\n} from \"./usersReducer\";\r\nimport authReducer, {setUserData} from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\n\r\nexport type ActionTypes =\r\n    ReturnType<typeof addPostActionCreator> |\r\n    ReturnType<typeof changePostTextActionCreator> |\r\n    ReturnType<typeof addMessage> |\r\n    ReturnType<typeof changeMessageText> |\r\n    ReturnType<typeof follow> |\r\n    ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof changeFetchingStatus> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setUserData> |\r\n    ReturnType<typeof changeResponseStatus>\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    rightNavbar: rightNavbarReducer,\r\n    users: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './LeftNavbar.module.css';\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\n\r\nfunction LeftNavbar() {\r\n    return (\r\n        <Grid container item className={style.leftNav} xs zeroMinWidth direction=\"column\">\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>New Feeds</h2>\r\n            </Paper>\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>More Pages</h2>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/profile/\">Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/dialogs/\">Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/news/\">News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/music/\">Music</NavLink>\r\n                </div>\r\n            </Paper>\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>Account</h2>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/settings/\">Settings</NavLink>\r\n                </div>\r\n            </Paper>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default LeftNavbar;","import React from \"react\";\r\n\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport style from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsItemPropsType} from \"../../../redux/dialogsReducer\";\r\n\r\n\r\nconst DialogItem: React.FC<DialogsItemPropsType> = (props) => {\r\n    let path = \"/social-network/profile/\" + props.id;\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            {props.avatar ? <img src={props.avatar} alt={'userImage'}/> : ''}\r\n            <NavLink to={path}>{props.userName}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport style from \"./Message.module.css\";\r\nimport {MessagePropsType} from \"../../../redux/dialogsReducer\";\r\n\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.messageText}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElement = state.dialogsData.map(u => <DialogItem key={u.id} userName={u.userName} id={u.id}\r\n                                                                avatar={u.avatar}/>)\r\n\r\n    let messageElement = state.messageData.map(m => <Message key={m.id} messageText={m.messageText} id={m.id}/>)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.changeMessageText(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogs_items}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messageElement}\r\n                <div className={style.addMessage}>\r\n                    <textarea onChange={onChangeHandler} value={state.newMessageText}></textarea>\r\n                    <button onClick={onClickHandler}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/social-network/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n\r\n}","import {addMessage, changeMessageText, DialogsInitialStateType} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: () => void\r\n    changeMessageText: (text: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\nconst DialogsContainer = connect(mapStateToProps, {addMessage, changeMessageText})(AuthRedirectComponent);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport style from \"./Contacts.module.css\";\r\nimport {ContactsDataPropsType} from \"../../../../redux/PropsType\";\r\n\r\nfunction Contacts(props: ContactsDataPropsType) {\r\n\r\n    return (\r\n        <div className={style.contact}>\r\n            {props.avatar ? <img src={props.avatar} alt={'contactImage'}/> : ''}\r\n            <div>{props.userName}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport style from './RightNavbar.module.css';\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {RightNavProps} from \"./RightNavbarContainer\";\r\n\r\nfunction RightNavbar(props: RightNavProps) {\r\n\r\n    const state = props.rightnavData\r\n\r\n    let contactsElement = state.contactsData.map(u => <Contacts key={u.id} userName={u.userName} id={u.id}\r\n                                                                avatar={u.avatar}/>)\r\n\r\n    return (\r\n        <Grid item xs zeroMinWidth>\r\n            <Paper color={'inherit'} className={style.rightNav}>\r\n                <div className={style.rightNavItem}>\r\n                    <h2 className={style.navbarTitle}>Contacts</h2>\r\n                    {contactsElement}\r\n                </div>\r\n                <div className={style.groupsNavbar}>\r\n                    <h2 className={style.navbarTitle}>Groups</h2>\r\n                </div>\r\n                <div className={style.pagesNavbar}>\r\n                    <h2 className={style.navbarTitle}>Pages</h2>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RightNavbar;","import RightNavbar from \"./RightNavbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionTypes, AppStateType} from \"../../../redux/reduxStore\";\r\nimport {RightNavInitialStateType} from \"../../../redux/rightNavbarReducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    rightnavData: RightNavInitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {}\r\n\r\nexport type RightNavProps = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        rightnavData: state.rightNavbar\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionTypes>) => {\r\n    return {}\r\n}\r\n\r\nconst RightNavbarContainer = connect(mapStateToProps, mapDispatchToProps)(RightNavbar);\r\n\r\nexport default RightNavbarContainer;","import React from 'react';\r\nimport {Grid, IconButton, Paper} from \"@material-ui/core\";\r\nimport style from \"./UsersPage.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultImg from \"../../assets/img/sveta.jpg\";\r\nimport {PersonAddRounded} from \"@material-ui/icons\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\n\r\ntype UsersPagePropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    followingUsers: number[]\r\n    onPageChanged: (pageNumber: number) => void\r\n    changeFollowStatus: (id: number, follow: boolean) => void\r\n}\r\n\r\nconst UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n    // let pagesCount = Math.ceil(props.totalCount / props.pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= 10; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <Grid item container direction={'column'} className={style.usersPage}>\r\n            {props.users.map(m =>\r\n                <Grid item className={style.userInfo} key={m.id}>\r\n                    <Paper className={style.ava} elevation={0}>\r\n                        <NavLink to={'/social-network/profile/' + m.id}>\r\n                            <img src={m.photos.small !== null ? m.photos.small : defaultImg}\r\n                                 alt={m.id + ' avatar'}\r\n                                 className={style.img}/>\r\n                        </NavLink>\r\n                        <IconButton size={'small'} onClick={() => props.changeFollowStatus(m.id, m.followed)}\r\n                                    color={m.followed ? 'secondary' : 'primary'}\r\n                                    style={{opacity: m.followed ? '0.3' : '1'}}\r\n                                    disabled={props.followingUsers.some(id => id === m.id)}>\r\n                            <PersonAddRounded fontSize={'small'}/>\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Paper className={style.description}>\r\n                        <div className={style.descriptionTop}>\r\n                            <NavLink to={'/social-network/profile/' + m.id}\r\n                                     style={{textDecoration: 'none', color: 'black'}}>{m.name}</NavLink>\r\n                            <div style={{fontSize: \"15px\", textAlign: 'center'}}>\r\n                                <div>\r\n                                    Belarus,\r\n                                </div>\r\n                                <div>\r\n                                    Minsk\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.descriptionBot} style={{fontSize: \"13px\"}}>\r\n                            \" {m.status} \"\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            )\r\n            }\r\n            <Grid>\r\n                {pages.map(m =>\r\n                    <span className={props.currentPage === m ? style.selectedPage : ''}\r\n                          onClick={(e) => {\r\n                              props.onPageChanged(m)\r\n                          }}>{m} </span>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default UsersPage;","export default __webpack_public_path__ + \"static/media/preloader.65c3f468.gif\";","import React from 'react';\r\nimport preloader from \"../../../assets/img/preloader.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt={'preloader'}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {connect} from \"react-redux\";\r\nimport {followUnfollow, getUsers, InitialStateType,} from \"../../redux/usersReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport React from \"react\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\n\r\ntype MapStatePropsType = {\r\n    usersPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    followUnfollow: (id: number, following: boolean) => void\r\n\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nclass UsersPageContainer extends React.Component<UsersPropsType> {\r\n\r\n\r\n    changeFollowStatus = (id: number, follow: boolean) => {\r\n        this.props.followUnfollow(id, follow)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.usersPage.currentPage, this.props.usersPage.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.usersPage.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n\r\n            {this.props.usersPage.isFetching ? <Preloader/> : <UsersPage\r\n                users={this.props.usersPage.users}\r\n                totalCount={this.props.usersPage.totalCount}\r\n                currentPage={this.props.usersPage.currentPage}\r\n                pageSize={this.props.usersPage.pageSize}\r\n                followingUsers={this.props.usersPage.followingUsers}\r\n                onPageChanged={this.onPageChanged}\r\n                changeFollowStatus={this.changeFollowStatus}/>\r\n            }\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        usersPage: state.users\r\n    }\r\n}\r\n\r\nconst AuthRedirectComponent = withAuthRedirect(UsersPageContainer)\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        getUsers,\r\n        followUnfollow,\r\n    })(AuthRedirectComponent)\r\n\r\n\r\n/*import {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport usersReducer, {\r\n    changeFetchingStatus,\r\n    follow,\r\n    InitialStateType,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/usersReducer\";\r\nimport {ActionTypes} from \"../../redux/reduxStore\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Dispatch} from \"redux\";\r\nimport {selectUsersPage} from \"../../redux/selector\";\r\n\r\n//class UsersPageContainer extends React.Component<UsersPropsType>\r\nconst UsersPageContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch<Dispatch<ActionTypes>>()\r\n\r\n    const {\r\n        users,\r\n        totalCount,\r\n        currentPage,\r\n        pageSize,\r\n        isFetching,\r\n    } = useSelector(selectUsersPage)\r\n\r\n    const changeFollowStatus = (id: number, followed: boolean) => {\r\n        if (followed) {\r\n            dispatch(unfollow(id))\r\n        } else {\r\n            dispatch(follow(id))\r\n        }\r\n    }\r\n\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            setUsers(response.data.items)\r\n            setTotalUsersCount(response.data.items.totalCount)\r\n        });\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(changeFetchingStatus(true))\r\n        dispatch(setCurrentPage(pageNumber))\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${pageSize}`)\r\n            .then(response => {\r\n                dispatch(setUsers(response.data.items))\r\n                dispatch(changeFetchingStatus(false))\r\n            });\r\n    }\r\n\r\n    return <>\r\n\r\n        {isFetching ? <Preloader/> : <UsersPage\r\n            users={users}\r\n            totalCount={totalCount}\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n            onPageChanged={onPageChanged}\r\n            changeFollowStatus={changeFollowStatus}/>\r\n        }\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default UsersPageContainer*/","export default __webpack_public_path__ + \"static/media/wrapper.87eb6080.png\";","import React from \"react\";\r\nimport wrapper from \"../../../assets/img/wrapper.png\";\r\nimport {CardMedia} from \"@material-ui/core\";\r\nimport {ProfileDataType} from \"../../../redux/profilleReducer\";\r\nimport defaultImg from \"../../../assets/img/sveta.jpg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport style from \"./ProfileInfo.module.css\"\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileDataType\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfoPropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n\r\n        return (\r\n            <div className={style.infoContainer}>\r\n                <CardMedia style={{borderRadius: '10px', marginBottom: '10px'}} component=\"img\" src={wrapper}/>\r\n                <div className={style.mainInfo}>\r\n                    <CardMedia style={{borderRadius: '50%', height: '100px', width: '100px'}} component=\"img\"\r\n                               className={style.ava}\r\n                               src={props.profile.photos.small !== null ? props.profile.photos.small : defaultImg}/>\r\n                    <div className={style.description}>\r\n                        <span className={style.fullName}>{props.profile.fullName}</span>\r\n                        <span>{props.profile.aboutMe}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport style from './Post.module.css'\r\nimport userAvatar from '../../../../assets/img/userAvatar.jpg'\r\nimport {PostType} from '../../../../redux/profilleReducer';\r\n\r\nfunction Post(props: PostType) {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src={userAvatar} alt={'userImage'}/>\r\n            {props.postContent}\r\n            <div>\r\n                <span>{props.postLikes} likes</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react'\r\nimport style from './UserPosts.module.css'\r\nimport Post from \"./Post/Post\"\r\nimport {UsersPostsPropsType} from \"./UserPostsContainer\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\n\r\nfunction UserPosts(props: UsersPostsPropsType) {\r\n\r\n    let state = props.profilePage\r\n\r\n\r\n    let postsElement = state.postsData.map(m =>\r\n        <Post\r\n            key={m.id}\r\n            postContent={m.postContent}\r\n            postLikes={m.postLikes}\r\n            id={m.id}\r\n        />)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.changePostText(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    return (\r\n        <Grid item container direction={'column'} alignContent={'center'}>\r\n            <div className={style.userNewPosts}>\r\n                <textarea className={style.textarea}\r\n                          onChange={onChangeHandler}\r\n                          value={state.messageForNewPost}></textarea>\r\n                <button className={style.button} onClick={onClickHandler}>Add Post</button>\r\n            </div>\r\n            {postsElement}\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default UserPosts;","import {\r\n    addPostActionCreator,\r\n    changePostTextActionCreator,\r\n    ProfileInitialStateType\r\n} from \"../../../redux/profilleReducer\";\r\nimport UserPosts from \"./UserPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionTypes, AppStateType} from \"../../../redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: () => void\r\n    changePostText: (text: string) => void\r\n}\r\n\r\nexport type UsersPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionTypes>) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        changePostText: (text: string) => {\r\n            dispatch(changePostTextActionCreator(text))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst UserPostsContainer = connect(mapStateToProps, mapDispatchToProps)(UserPosts);\r\n\r\n\r\nexport default UserPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport UserPostsContainer from \"./UserPosts/UserPostsContainer\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {ProfileStateType} from \"./ProfileContainer\";\r\n\r\nfunction Profile(props: ProfileStateType) {\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\">\r\n                <ProfileInfo profile={props.profilePage.profile}/>\r\n                <UserPostsContainer/>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, ProfileInitialStateType,} from \"../../redux/profilleReducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getProfile: (userId: string) => void\r\n\r\n}\r\n\r\ntype UserIdType = {\r\n    userId: string\r\n}\r\n\r\nexport type ProfileStateType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport type PropsType = RouteComponentProps<UserIdType> & ProfileStateType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        this.props.getProfile(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    profilePage: state.profilePage,\r\n})\r\n\r\nconst AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nconst WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps, {getProfile})(WithUrlDataContainerComponent);","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {AppBar, Button, IconButton, TextField, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {Menu, PeopleRounded} from \"@material-ui/icons\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DataType} from \"../../redux/authReducer\";\r\n\r\ntype HeaderPropsType = {\r\n    data: DataType\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nfunction Header(props: HeaderPropsType) {\r\n    return (\r\n        <AppBar color={'inherit'} position={'static'} className={style.header} style={{justifyContent: \"center\"}}>\r\n            <Toolbar style={{justifyContent: \"space-between\"}}>\r\n                <IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\">\r\n                    <Menu/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\">\r\n                    Social Network\r\n                </Typography>\r\n                <TextField\r\n                    size={'small'}\r\n                    variant=\"outlined\"\r\n                    color={'primary'}\r\n                    placeholder=\"Title\"\r\n                />\r\n                <NavLink to=\"/social-network/users-page\">\r\n                    <IconButton>\r\n                        <PeopleRounded color={'primary'}/>\r\n                    </IconButton>\r\n                </NavLink>\r\n                {props.isAuth ? <NavLink to=\"/social-network/profile\">{props.data.login}</NavLink>\r\n                    : <NavLink to=\"/social-network/login-page\">\r\n                        <Button variant={\"outlined\"} color=\"primary\">Login</Button>\r\n                    </NavLink>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {AuthInitialStateType, authUser} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStateToPropsType = AuthInitialStateType\r\n\r\n\r\ntype MapDispatchToPropsType = {\r\n    authUser: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.authUser()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Header data={this.props.data} isAuth={this.props.isAuth}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {authUser})(HeaderContainer);","import React from 'react';\r\nimport {Paper} from \"@material-ui/core\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <Paper>\r\n            <h2>LOGIN</h2>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport './App.css';\r\nimport LeftNavbar from \"./Components/Navbars/LeftNavbar/LeftNavbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport News from \"./Components/News/News\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport RightNavbarContainer from \"./Components/Navbars/RightNavbar/RightNavbarContainer\";\r\nimport {Container, Grid, Paper} from \"@material-ui/core\";\r\nimport UsersPageContainer from \"./Components/UsersPage/UsersPageContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <HeaderContainer/>\r\n            <Container fixed>\r\n                <Grid\r\n                    spacing={6}\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"space-around\">\r\n\r\n                    <LeftNavbar/>\r\n                    <Grid item xs={7}>\r\n                        <Paper className=\"app-wrapper-content\">\r\n                            <Route path={\"/social-network/dialogs\"} render={() => <DialogsContainer/>}/>\r\n\r\n                            <Route path={\"/social-network/profile/:userId?\"} render={() => <ProfileContainer/>}/>\r\n\r\n                            <Route path={\"/social-network/users-page\"} render={() => <UsersPageContainer/>}/>\r\n\r\n\r\n                            <Route path={\"/social-network/music\"} component={Music}/>\r\n                            <Route path={\"/social-network/news\"} component={News}/>\r\n                            <Route path={\"/social-network/settings\"} component={Settings}/>\r\n                            <Route path={\"/social-network/login\"} component={Login}/>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <RightNavbarContainer/>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/reduxStore\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftNav\":\"LeftNavbar_leftNav__3JL1_\",\"navBlock\":\"LeftNavbar_navBlock__3J2mG\",\"item\":\"LeftNavbar_item__231RS\",\"navbarTitle\":\"LeftNavbar_navbarTitle__3N9cF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"UsersPage_userInfo__3LhNf\",\"img\":\"UsersPage_img__1NGax\",\"ava\":\"UsersPage_ava__3q7Md\",\"description\":\"UsersPage_description__1huTr\",\"descriptionTop\":\"UsersPage_descriptionTop__1jZU6\",\"descriptionBot\":\"UsersPage_descriptionBot__2T38C\",\"usersPage\":\"UsersPage_usersPage__3wZfu\",\"selectedPage\":\"UsersPage_selectedPage__24X7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightNav\":\"RightNavbar_rightNav__1Wsmb\",\"navbarTitle\":\"RightNavbar_navbarTitle__2b3Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"ProfileInfo_infoContainer__1BEBN\",\"mainInfo\":\"ProfileInfo_mainInfo__150Qa\",\"description\":\"ProfileInfo_description__np7mD\",\"fullName\":\"ProfileInfo_fullName__1BFQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__14t2F\",\"dialogs_items\":\"Dialogs_dialogs_items__2Qi4m\",\"messages\":\"Dialogs_messages__3ydIv\",\"addMessage\":\"Dialogs_addMessage__1GQ4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userNewPosts\":\"UserPosts_userNewPosts__3Atrz\",\"textarea\":\"UserPosts_textarea__2Yy1q\",\"button\":\"UserPosts_button__23rdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1SljY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Kit1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contacts_contact__35Q3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__yAHA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__gRr98\"};"],"sourceRoot":""}