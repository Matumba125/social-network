{"version":3,"sources":["reportWebVitals.ts","assets/img/userAvatar.jpg","redux/profilleReducer.ts","assets/img/dimych.jpg","assets/img/andrey.jpg","assets/img/sveta.jpg","redux/dialogsReducer.ts","redux/rightNavbarReducer.ts","redux/usersReducer.ts","redux/reduxStore.ts","Components/Header/Header.tsx","Components/Navbars/LeftNavbar/LeftNavbar.tsx","Components/Music/Music.tsx","Components/News/News.tsx","Components/Settings/Settings.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Navbars/RightNavbar/Contacts/Contacts.tsx","Components/Navbars/RightNavbar/RightNavbar.tsx","Components/Navbars/RightNavbar/RightNavbarContainer.tsx","Components/UsersPage/UsersPage.tsx","assets/img/preloader.gif","Components/common/Preloader/Preloader.tsx","Components/UsersPage/UsersPageContainer.tsx","assets/img/wrapper.png","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/UserPosts/Post/Post.tsx","Components/Profile/UserPosts/UserPosts.tsx","Components/Profile/UserPosts/UserPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","App.tsx","index.tsx","Components/Navbars/LeftNavbar/LeftNavbar.module.css","Components/UsersPage/UsersPage.module.css","Components/Navbars/RightNavbar/RightNavbar.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/UserPosts/UserPosts.module.css","Components/Header/Header.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/Message/Message.module.css","Components/Navbars/RightNavbar/Contacts/Contacts.module.css","Components/Profile/UserPosts/Post/Post.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","CHANGE_POST_TEXT","SET_USER_PROFILE","initialState","profile","photos","large","myPhoto","small","fullName","messageForNewPost","postsData","id","v1","postContent","postLikes","profileReducer","state","action","type","newPost","newText","ADD_MESSAGE","CHANGE_MESSAGE_TEXT","dialogsData","userName","avatar","dimych","andrey","sveta","messageData","messageText","newMessageText","dialogsReducer","newMessage","InitialState","contactsData","rightNavbarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","CHANGE_FETCHING_STATUS","users","pageSize","totalCount","currentPage","isFetching","usersReducer","map","m","followed","rootReducer","combineReducers","profilePage","dialogsPage","rightNavbar","store","createStore","Header","AppBar","color","position","className","style","header","justifyContent","Toolbar","IconButton","edge","aria-label","Menu","Typography","variant","TextField","size","placeholder","to","PeopleRounded","Button","LeftNavbar","Grid","container","item","leftNav","xs","zeroMinWidth","direction","Paper","navBlock","navbarTitle","Music","News","Settings","DialogItem","props","path","dialog","src","alt","Message","message","Dialogs","dialogsElement","u","messageElement","dialogs","dialogs_items","messages","addMessage","onChange","e","changeMessageText","currentTarget","value","onClick","DialogsContainer","connect","dispatch","text","Contacts","contact","RightNavbar","contactsElement","rightnavData","rightNav","rightNavItem","groupsNavbar","pagesNavbar","RightNavbarContainer","UsersPage","pages","i","push","usersPage","userInfo","ava","elevation","defaultImg","img","changeFollowStatus","opacity","PersonAddRounded","fontSize","description","descriptionTop","textDecoration","name","textAlign","descriptionBot","status","selectedPage","onPageChanged","Preloader","preloader","UsersPageContainer","follow","unfollow","pageNumber","changeFetchingStatus","setCurrentPage","axios","get","response","console","log","data","items","setUsers","this","setTotalUsersCount","React","Component","ProfileInfo","infoContainer","CardMedia","borderRadius","marginBottom","component","wrapper","mainInfo","height","width","aboutMe","Post","userAvatar","UserPosts","postsElement","alignContent","userNewPosts","textarea","changePostText","button","addPost","UserPostsContainer","Profile","ProfileContainer","userId","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","App","Container","fixed","spacing","render","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.73cfccce.chunk.js","sourcesContent":["import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/userAvatar.9ca0a8b7.jpg\";","import {v1} from \"uuid\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\nimport {PhotosType} from \"./usersReducer\";\r\nimport myPhoto from \"../assets/img/userAvatar.jpg\"\r\n\r\n\r\nexport type PostType = {\r\n    id: string\r\n    postContent: string\r\n    postLikes: number\r\n}\r\n\r\ntype ContactsType ={\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\n\r\n\r\n\r\nexport type ProfileDataType = {\r\n    aboutMe?: string\r\n    contacts?: ContactsType\r\n    lookingForAJob?: boolean\r\n    lookingForAJobDescription?: string\r\n    userID?: number\r\n    photos: PhotosType\r\n    fullName: string\r\n}\r\n\r\nexport type ProfileInitialStateType = {\r\n    profile: ProfileDataType\r\n    messageForNewPost: string\r\n    postsData: Array<PostType>\r\n}\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst CHANGE_POST_TEXT = 'CHANGE-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\n\r\nlet initialState: ProfileInitialStateType = {\r\n    profile:{\r\n        photos:{\r\n            large: myPhoto,\r\n            small: myPhoto,\r\n        },\r\n        fullName: 'Nikita'\r\n    },\r\n    messageForNewPost: '',\r\n    postsData: [\r\n        {\r\n            id: v1(),\r\n            postContent: \"Hello World !!!\",\r\n            postLikes: 15,\r\n\r\n        },\r\n        {\r\n            id: v1(),\r\n            postContent: \"It's my first post!!\",\r\n            postLikes: 28\r\n        }\r\n    ],\r\n}\r\n\r\nconst profileReducer = (state: ProfileInitialStateType = initialState,\r\n                        action: ActionTypes): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: v1(),\r\n                postContent: state.messageForNewPost,\r\n                postLikes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                    postsData: [newPost, ...state.postsData],\r\n                    messageForNewPost: ''\r\n            }\r\n\r\n        case CHANGE_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                    messageForNewPost: action.newText\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            debugger\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST} as const)\r\n\r\nexport const changePostTextActionCreator = (newText: string) => ({\r\n        type: CHANGE_POST_TEXT,\r\n        newText: newText\r\n    } as const\r\n)\r\n\r\nexport const setUserProfile = (profile: ProfileDataType) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n} as const)\r\n\r\nexport default profileReducer","export default __webpack_public_path__ + \"static/media/dimych.4cfb0ddb.jpg\";","export default __webpack_public_path__ + \"static/media/andrey.05d81a41.jpg\";","export default __webpack_public_path__ + \"static/media/sveta.2e2af972.jpg\";","import {v1} from \"uuid\";\r\nimport dimych from \"../assets/img/dimych.jpg\";\r\nimport andrey from \"../assets/img/andrey.jpg\";\r\nimport sveta from \"../assets/img/sveta.jpg\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\n\r\n\r\nexport type DialogsItemPropsType = {\r\n    id: string\r\n    userName: string\r\n    avatar?: string\r\n}\r\n\r\nexport type MessagePropsType = {\r\n    messageText: string\r\n    id: string\r\n}\r\n\r\nexport type DialogsInitialStateType = typeof initialState\r\n\r\n\r\n\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst CHANGE_MESSAGE_TEXT = 'CHANGE-MESSAGE-TEXT';\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: v1(), userName: \"Dimych\", avatar: dimych},\r\n        {id: v1(), userName: \"Andrey\", avatar: andrey},\r\n        {id: v1(), userName: \"Sveta\", avatar: sveta},\r\n        {id: v1(), userName: \"Sasha\"},\r\n        {id: v1(), userName: \"Viktor\"},\r\n        {id: v1(), userName: \"Valera\"}\r\n    ] as Array<DialogsItemPropsType>,\r\n\r\n    messageData: [\r\n        {id: v1(), messageText: \"HI\"},\r\n        {id: v1(), messageText: \"Hello\"},\r\n        {id: v1(), messageText: \"YO\"}\r\n    ] as Array<MessagePropsType>,\r\n\r\n    newMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state: DialogsInitialStateType = initialState,\r\n                        action: ActionTypes): DialogsInitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessagePropsType = {\r\n                id: v1(),\r\n                messageText: state.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, newMessage],\r\n                newMessageText: ''\r\n            }\r\n\r\n        case CHANGE_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE} as const)\r\n\r\nexport const changeMessageTextActionCreator = (newText: string) => ({\r\n        type: CHANGE_MESSAGE_TEXT,\r\n        newText: newText\r\n    } as const\r\n)\r\n\r\nexport default dialogsReducer","import {v1} from \"uuid\";\r\nimport dimych from \"../assets/img/dimych.jpg\";\r\nimport andrey from \"../assets/img/andrey.jpg\";\r\nimport sveta from \"../assets/img/sveta.jpg\";\r\nimport {ActionTypes} from \"./reduxStore\";\r\n\r\ntype ContactsDataType = {\r\n    id: string\r\n    userName: string\r\n    avatar: string\r\n}\r\n\r\nexport type RightNavInitialStateType = typeof InitialState\r\n\r\nconst InitialState = {\r\n    contactsData: [\r\n        {id: v1(), userName: \"Dimych\", avatar: dimych},\r\n        {id: v1(), userName: \"Andrey\", avatar: andrey},\r\n        {id: v1(), userName: \"Sveta\", avatar: sveta}\r\n    ] as Array<ContactsDataType>\r\n}\r\n\r\nexport const rightNavbarReducer = (state: RightNavInitialStateType = InitialState, action: ActionTypes): RightNavInitialStateType =>{\r\n\r\n    return state\r\n}\r\n\r\nexport default  rightNavbarReducer","import {ActionTypes} from \"./reduxStore\";\r\n\r\n/*type AddressType ={\r\n    country: string\r\n    city: string\r\n}*/\r\n\r\nexport type PhotosType ={\r\n    large: string\r\n    small: string\r\n}\r\n\r\nexport type UserType ={\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n    followed: boolean\r\n    status: string\r\n    photos: PhotosType\r\n    /*address: AddressType*/\r\n}\r\n\r\nexport type InitialStateType ={\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst CHANGE_FETCHING_STATUS = 'CHANGE-FETCHING-STATUS';\r\n\r\nlet initialState: InitialStateType = {\r\n        users: [],\r\n        pageSize: 5,\r\n        totalCount: 0,\r\n        currentPage: 1,\r\n        isFetching: false\r\n}\r\n\r\nconst usersReducer = (state:InitialStateType = initialState,\r\n                      action: ActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n               users: state.users.map(m =>\r\n                   m.id === action.id ? {...m, followed: true} : m),\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m =>\r\n                m.id === action.id ? {...m, followed: false} : m)\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [ ...action.users]}\r\n        case  SET_CURRENT_PAGE:\r\n        {\r\n                return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:\r\n        {\r\n            return {...state, totalCount: action.totalCount}\r\n        }\r\n        case CHANGE_FETCHING_STATUS:\r\n        {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (id: number) => ({\r\n    type: FOLLOW,\r\n    id\r\n} as const)\r\nexport const unfollow = (id: number) => ({\r\n    type: UNFOLLOW,\r\n    id\r\n} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({\r\n    type: SET_USERS,\r\n    users\r\n} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n} as const)\r\nexport const  setTotalUsersCount = (totalCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n} as const)\r\nexport const changeFetchingStatus = (isFetching: boolean) =>({\r\n    type: CHANGE_FETCHING_STATUS,\r\n    isFetching\r\n} as const)\r\n\r\n\r\nexport default usersReducer","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer, {addPostActionCreator, changePostTextActionCreator, setUserProfile} from \"./profilleReducer\";\r\nimport dialogsReducer, {addMessageActionCreator, changeMessageTextActionCreator} from \"./dialogsReducer\";\r\nimport rightNavbarReducer from \"./rightNavbarReducer\";\r\nimport usersReducer, {\r\n    changeFetchingStatus,\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow\r\n} from \"./usersReducer\";\r\n\r\n\r\nexport type ActionTypes =\r\n    ReturnType<typeof addPostActionCreator> |\r\n    ReturnType<typeof changePostTextActionCreator> |\r\n    ReturnType<typeof addMessageActionCreator> |\r\n    ReturnType<typeof changeMessageTextActionCreator> |\r\n    ReturnType<typeof follow> |\r\n    ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUsers>|\r\n    ReturnType<typeof setCurrentPage>|\r\n    ReturnType<typeof setTotalUsersCount>|\r\n    ReturnType<typeof changeFetchingStatus>|\r\n    ReturnType<typeof setUserProfile>\r\n\r\nexport const  rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    rightNavbar: rightNavbarReducer,\r\n    users: usersReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {AppBar, Button, IconButton, TextField, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {Menu, PeopleRounded} from \"@material-ui/icons\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <AppBar color={'inherit'} position={'static'} className={style.header} style={{justifyContent: \"center\"}}>\r\n            <Toolbar style={{justifyContent: \"space-between\"}}>\r\n                <IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\">\r\n                    <Menu/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\">\r\n                    Social Network\r\n                </Typography>\r\n                <TextField\r\n                    size={'small'}\r\n                    variant=\"outlined\"\r\n                    color={'primary'}\r\n                    placeholder=\"Title\"\r\n                />\r\n                <NavLink to=\"/social-network/users-page\">\r\n                    <IconButton>\r\n                        <PeopleRounded color={'primary'}/>\r\n                    </IconButton>\r\n                </NavLink>\r\n                <Button variant={\"outlined\"} color=\"primary\" >Login</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './LeftNavbar.module.css';\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\n\r\nfunction LeftNavbar() {\r\n    return (\r\n        <Grid container item className={style.leftNav} xs zeroMinWidth direction=\"column\">\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>New Feeds</h2>\r\n            </Paper>\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>More Pages</h2>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/profile/\">Profile</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/dialogs/\">Messages</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/news/\">News</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/music/\">Music</NavLink>\r\n                </div>\r\n            </Paper>\r\n            <Paper className={style.navBlock}>\r\n                <h2 className={style.navbarTitle}>Account</h2>\r\n                <div className={style.item}>\r\n                    <NavLink to=\"/social-network/settings/\">Settings</NavLink>\r\n                </div>\r\n            </Paper>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default LeftNavbar;","import React from \"react\";\r\n\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport style from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsItemPropsType} from \"../../../redux/dialogsReducer\";\r\n\r\n\r\nconst DialogItem: React.FC<DialogsItemPropsType> =(props) =>{\r\n    let path = \"/social-network/profile/\" + props.id;\r\n\r\n    return(\r\n        <div className={style.dialog}>\r\n            {props.avatar ? <img src={props.avatar} alt={'userImage'}/>:'' }\r\n            <NavLink to={path}>{props.userName}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport style from \"./Message.module.css\";\r\nimport {MessagePropsType} from \"../../../redux/dialogsReducer\";\r\n\r\nconst Message: React.FC<MessagePropsType> =(props) => {\r\n    return (\r\n        <div className={style.message}>{props.messageText}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> =(props) =>{\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElement = state.dialogsData.map(u => <DialogItem key={u.id} userName={u.userName} id={u.id} avatar={u.avatar}/>)\r\n\r\n    let messageElement = state.messageData.map(m => <Message key={m.id} messageText={m.messageText} id={m.id}/>)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.changeMessageText(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogs_items}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messageElement}\r\n                <div className={style.addMessage}>\r\n                    <textarea onChange={onChangeHandler} value={state.newMessageText}></textarea>\r\n                    <button onClick={onClickHandler}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {\r\n    addMessageActionCreator,\r\n    changeMessageTextActionCreator,\r\n    DialogsInitialStateType\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionTypes, AppStateType} from \"../../redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType ={\r\n    addMessage: ()=>void\r\n    changeMessageText: (text: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionTypes>): MapDispatchPropsType => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n        changeMessageText: (text: string) =>{\r\n            dispatch(changeMessageTextActionCreator(text))\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport style from \"./Contacts.module.css\";\r\nimport {ContactsDataPropsType} from \"../../../../redux/PropsType\";\r\n\r\nfunction Contacts(props: ContactsDataPropsType) {\r\n\r\n    return (\r\n        <div className={style.contact}>\r\n            {props.avatar ? <img src={props.avatar} alt={'contactImage'}/> : ''}\r\n            <div>{props.userName}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport style from './RightNavbar.module.css';\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {RightNavProps} from \"./RightNavbarContainer\";\r\n\r\nfunction RightNavbar(props: RightNavProps) {\r\n\r\n    const state = props.rightnavData\r\n\r\n    let contactsElement = state.contactsData.map(u => <Contacts key={u.id} userName={u.userName} id={u.id}\r\n                                                                avatar={u.avatar}/>)\r\n\r\n    return (\r\n        <Grid item xs zeroMinWidth>\r\n            <Paper color={'inherit'} className={style.rightNav}>\r\n                <div className={style.rightNavItem}>\r\n                    <h2 className={style.navbarTitle}>Contacts</h2>\r\n                    {contactsElement}\r\n                </div>\r\n                <div className={style.groupsNavbar}>\r\n                    <h2 className={style.navbarTitle}>Groups</h2>\r\n                </div>\r\n                <div className={style.pagesNavbar}>\r\n                    <h2 className={style.navbarTitle}>Pages</h2>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RightNavbar;","import RightNavbar from \"./RightNavbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionTypes, AppStateType} from \"../../../redux/reduxStore\";\r\nimport {RightNavInitialStateType} from \"../../../redux/rightNavbarReducer\";\r\n\r\ntype MapStateToPropsType ={\r\n    rightnavData: RightNavInitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType ={}\r\n\r\nexport type RightNavProps = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        rightnavData: state.rightNavbar\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionTypes>) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst RightNavbarContainer = connect(mapStateToProps, mapDispatchToProps)(RightNavbar);\r\n\r\nexport default RightNavbarContainer;","import React from 'react';\r\nimport {Grid, IconButton, Paper} from \"@material-ui/core\";\r\nimport style from \"./UsersPage.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultImg from \"../../assets/img/sveta.jpg\";\r\nimport {PersonAddRounded} from \"@material-ui/icons\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\n\r\ntype UsersPagePropsType ={\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number)=> void\r\n    changeFollowStatus: (id: number, follow: boolean) => void\r\n}\r\n\r\nconst UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n    // let pagesCount = Math.ceil(props.totalCount / props.pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <=10; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <Grid item container direction={'column'} className={style.usersPage}>\r\n            {props.users.map(m =>\r\n                <Grid item className={style.userInfo} key={m.id}>\r\n                    <Paper className={style.ava} elevation={0}>\r\n                        <NavLink to={'/social-network/profile/' + m.id}>\r\n                            <img src={m.photos.small !== null ? m.photos.small : defaultImg} alt={m.id + ' avatar'}\r\n                                 className={style.img}/>\r\n                        </NavLink>\r\n                        <IconButton size={'small'} onClick={() => props.changeFollowStatus(m.id, m.followed)}\r\n                                    color={m.followed ? 'inherit' : 'primary'}\r\n                                    style={{opacity: m.followed ? '0.5' : '1'}}>\r\n                            <PersonAddRounded fontSize={'small'}/>\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Paper className={style.description}>\r\n                        <div className={style.descriptionTop}>\r\n                            <NavLink to={'/social-network/profile/' + m.id} style={{textDecoration: 'none', color: 'black'}}>\r\n                                {m.name}\r\n                            </NavLink>\r\n                            <div style={{fontSize: \"15px\", textAlign: 'center'}}>\r\n                                <div>\r\n                                    Belarus,\r\n                                </div>\r\n                                <div>\r\n                                    Minsk\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.descriptionBot} style={{fontSize: \"13px\"}}>\r\n                            \" {m.status} \"\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            )\r\n            }\r\n            <Grid>\r\n                {pages.map(m =>\r\n                    <span className={props.currentPage === m ? style.selectedPage : ''}\r\n                          onClick={(e) => {props.onPageChanged(m)}}>{m} </span>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default UsersPage;","export default __webpack_public_path__ + \"static/media/preloader.65c3f468.gif\";","import React from 'react';\r\nimport preloader from \"../../../assets/img/preloader.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt={'preloader'}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {connect} from \"react-redux\";\r\nimport {\r\n    changeFetchingStatus,\r\n    follow,\r\n    InitialStateType,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/usersReducer\";\r\nimport { AppStateType} from \"../../redux/reduxStore\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\ntype MapStatePropsType = {\r\n    usersPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    changeFetchingStatus: (isFetching: boolean) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nclass UsersPageContainer extends React.Component<UsersPropsType>{\r\n\r\n\r\n    changeFollowStatus = (id: number, follow: boolean) => {\r\n        if (follow) {\r\n            this.props.unfollow(id)\r\n        } else {\r\n            this.props.follow(id)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.changeFetchingStatus(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.usersPage.currentPage}&count=${this.props.usersPage.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.items.totalCount)\r\n                this.props.changeFetchingStatus(false)\r\n\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.changeFetchingStatus(true)\r\n        this.props.setCurrentPage(pageNumber)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.usersPage.pageSize}`)\r\n            .then(response => {\r\n                console.log(response.data.items)\r\n                this.props.setUsers(response.data.items)\r\n                this.props.changeFetchingStatus(false)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n\r\n            {this.props.usersPage.isFetching ? <Preloader/> : <UsersPage\r\n                users={this.props.usersPage.users}\r\n                totalCount={this.props.usersPage.totalCount}\r\n                currentPage={this.props.usersPage.currentPage}\r\n                pageSize={this.props.usersPage.pageSize}\r\n                onPageChanged={this.onPageChanged}\r\n                changeFollowStatus={this.changeFollowStatus}/>\r\n            }\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        usersPage: state.users\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        changeFetchingStatus\r\n    })(UsersPageContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport usersReducer, {\r\n    changeFetchingStatus,\r\n    follow,\r\n    InitialStateType,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/usersReducer\";\r\nimport {ActionTypes} from \"../../redux/reduxStore\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Dispatch} from \"redux\";\r\nimport {selectUsersPage} from \"../../redux/selector\";\r\n\r\n//class UsersPageContainer extends React.Component<UsersPropsType>\r\nconst UsersPageContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch<Dispatch<ActionTypes>>()\r\n\r\n    const {\r\n        users,\r\n        totalCount,\r\n        currentPage,\r\n        pageSize,\r\n        isFetching,\r\n    } = useSelector(selectUsersPage)\r\n\r\n    const changeFollowStatus = (id: number, followed: boolean) => {\r\n        if (followed) {\r\n            dispatch(unfollow(id))\r\n        } else {\r\n            dispatch(follow(id))\r\n        }\r\n    }\r\n\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            setUsers(response.data.items)\r\n            setTotalUsersCount(response.data.items.totalCount)\r\n        });\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(changeFetchingStatus(true))\r\n        dispatch(setCurrentPage(pageNumber))\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${pageSize}`)\r\n            .then(response => {\r\n                dispatch(setUsers(response.data.items))\r\n                dispatch(changeFetchingStatus(false))\r\n            });\r\n    }\r\n\r\n    return <>\r\n\r\n        {isFetching ? <Preloader/> : <UsersPage\r\n            users={users}\r\n            totalCount={totalCount}\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n            onPageChanged={onPageChanged}\r\n            changeFollowStatus={changeFollowStatus}/>\r\n        }\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default UsersPageContainer*/","export default __webpack_public_path__ + \"static/media/wrapper.87eb6080.png\";","import React from \"react\";\r\nimport wrapper from \"../../../assets/img/wrapper.png\";\r\nimport {CardMedia} from \"@material-ui/core\";\r\nimport {ProfileDataType} from \"../../../redux/profilleReducer\";\r\nimport defaultImg from \"../../../assets/img/sveta.jpg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport style from \"./ProfileInfo.module.css\"\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileDataType\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfoPropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n\r\n        return (\r\n            <div className={style.infoContainer}>\r\n                <CardMedia style={{borderRadius: '10px', marginBottom: '10px'}} component=\"img\" src={wrapper}/>\r\n                <div className={style.mainInfo}>\r\n                    <CardMedia style={{borderRadius: '50%', height: '100px', width: '100px'}} component=\"img\"\r\n                               className={style.ava}\r\n                               src={props.profile.photos.small !== null ? props.profile.photos.small : defaultImg}/>\r\n                    <div className={style.description}>\r\n                        <span className={style.fullName}>{props.profile.fullName}</span>\r\n                        <span>{props.profile.aboutMe}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport style from './Post.module.css'\r\nimport userAvatar from '../../../../assets/img/userAvatar.jpg'\r\nimport { PostType } from '../../../../redux/profilleReducer';\r\n\r\nfunction Post(props: PostType) {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src={userAvatar} alt={'userImage'}/>\r\n            {props.postContent}\r\n            <div>\r\n                <span>{props.postLikes} likes</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react'\r\nimport style from './UserPosts.module.css'\r\nimport Post from \"./Post/Post\"\r\nimport {UsersPostsPropsType} from \"./UserPostsContainer\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\n\r\n\r\nfunction UserPosts(props: UsersPostsPropsType) {\r\n\r\n    let state = props.profilePage\r\n\r\n\r\n    let postsElement = state.postsData.map(m =>\r\n        <Post\r\n            key={m.id}\r\n            postContent={m.postContent}\r\n            postLikes={m.postLikes}\r\n            id={m.id}\r\n        />)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.changePostText(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n       props.addPost();\r\n    }\r\n\r\n    return (\r\n        <Grid item container direction={'column'} alignContent={'center'}>\r\n            <div className={style.userNewPosts}>\r\n                <textarea className={style.textarea}\r\n                          onChange={onChangeHandler}\r\n                          value={state.messageForNewPost}></textarea>\r\n                <button className={style.button} onClick={onClickHandler}>Add Post</button>\r\n            </div>\r\n            {postsElement}\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default UserPosts;","import {addPostActionCreator, changePostTextActionCreator, ProfileInitialStateType} from \"../../../redux/profilleReducer\";\r\nimport UserPosts from \"./UserPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionTypes, AppStateType} from \"../../../redux/reduxStore\";\r\nimport { Dispatch } from \"redux\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType ={\r\n    addPost: ()=>void\r\n    changePostText: (text: string) => void\r\n}\r\n\r\nexport type UsersPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionTypes>) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        changePostText: (text: string) =>{\r\n            dispatch(changePostTextActionCreator(text))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst UserPostsContainer = connect(mapStateToProps, mapDispatchToProps)(UserPosts);\r\n\r\n\r\n\r\nexport default UserPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport UserPostsContainer from \"./UserPosts/UserPostsContainer\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {ProfileStateType} from \"./ProfileContainer\";\r\n\r\nfunction Profile(props: ProfileStateType) {\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\">\r\n                <ProfileInfo profile={props.profilePage.profile}/>\r\n                <UserPostsContainer/>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    ProfileDataType,\r\n    ProfileInitialStateType,\r\n    setUserProfile\r\n} from \"../../redux/profilleReducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    setUserProfile: (profile: ProfileDataType) => void\r\n\r\n}\r\n\r\ntype UserIdType = {\r\n    userId: string\r\n}\r\n\r\nexport type ProfileStateType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport type PropsType = RouteComponentProps<UserIdType> & ProfileStateType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n/*        if (!userId){\r\n            userId = '18309';\r\n        }*/\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.props.setUserProfile(response.data)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: MapStateToPropsType): MapStateToPropsType => ({\r\n    profilePage: state.profilePage\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {setUserProfile})(WithUrlDataContainerComponent);","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Components/Header/Header\";\r\nimport LeftNavbar from \"./Components/Navbars/LeftNavbar/LeftNavbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport News from \"./Components/News/News\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport RightNavbarContainer from \"./Components/Navbars/RightNavbar/RightNavbarContainer\";\r\nimport {Container, Grid, Paper} from \"@material-ui/core\";\r\nimport UsersPageContainer from \"./Components/UsersPage/UsersPageContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            <Container fixed>\r\n                <Grid\r\n                    spacing={6}\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"space-around\">\r\n\r\n                    <LeftNavbar/>\r\n                    <Grid item xs={7}>\r\n                        <Paper className=\"app-wrapper-content\">\r\n                            <Route path={\"/social-network/dialogs\"} render={() => <DialogsContainer/>}/>\r\n\r\n                            <Route path={\"/social-network/profile/:userId?\"} render={() => <ProfileContainer/>}/>\r\n\r\n                            <Route path={\"/social-network/users-page\"} render={() => <UsersPageContainer/>}/>\r\n\r\n\r\n                            <Route path={\"/social-network/music\"} component={Music}/>\r\n                            <Route path={\"/social-network/news\"} component={News}/>\r\n                            <Route path={\"/social-network/settings\"} component={Settings}/>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <RightNavbarContainer/>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/reduxStore\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftNav\":\"LeftNavbar_leftNav__3JL1_\",\"navBlock\":\"LeftNavbar_navBlock__3J2mG\",\"item\":\"LeftNavbar_item__231RS\",\"navbarTitle\":\"LeftNavbar_navbarTitle__3N9cF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"UsersPage_userInfo__3LhNf\",\"img\":\"UsersPage_img__1NGax\",\"ava\":\"UsersPage_ava__3q7Md\",\"description\":\"UsersPage_description__1huTr\",\"descriptionTop\":\"UsersPage_descriptionTop__1jZU6\",\"descriptionBot\":\"UsersPage_descriptionBot__2T38C\",\"usersPage\":\"UsersPage_usersPage__3wZfu\",\"selectedPage\":\"UsersPage_selectedPage__24X7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightNav\":\"RightNavbar_rightNav__1Wsmb\",\"navbarTitle\":\"RightNavbar_navbarTitle__2b3Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"ProfileInfo_infoContainer__1BEBN\",\"mainInfo\":\"ProfileInfo_mainInfo__150Qa\",\"description\":\"ProfileInfo_description__np7mD\",\"fullName\":\"ProfileInfo_fullName__1BFQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__14t2F\",\"dialogs_items\":\"Dialogs_dialogs_items__2Qi4m\",\"messages\":\"Dialogs_messages__3ydIv\",\"addMessage\":\"Dialogs_addMessage__1GQ4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userNewPosts\":\"UserPosts_userNewPosts__3Atrz\",\"textarea\":\"UserPosts_textarea__2Yy1q\",\"button\":\"UserPosts_button__23rdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__gRr98\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1SljY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Kit1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contacts_contact__35Q3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__yAHA8\"};"],"sourceRoot":""}